;	似非DOS

SYSTEM	EQU	00005H
RDSLT	EQU	0000CH
CALSLT	EQU	0001CH
ENASLT	EQU	00024H
CHGMOD	EQU	0005FH
INITXT	EQU	0006CH
SETTXT	EQU	00078H
FCB1	EQU	0005CH
DTA1	EQU	00080H
FCB11	EQU	0F307H
BDOS	EQU	0F37DH
LINL40	EQU	0F3AEH
KBUF	EQU	0F41FH
BUF	EQU	0F55EH
MEMSIZ	EQU	0F672H
EXBRSA	EQU	0FAF8H
EXPTBL	EQU	0FCC1H
EXTBIOS	EQU	0FFCAH
MAPPER	EQU	00402H

SAVE_SP	EQU	BUF
SAVE_DE	EQU	BUF+2
SAVE_IX	EQU	BUF+4
SAVE_C	EQU	BUF+6
DE_MEM_SIZE	EQU	BUF+7
SAVE_HL	EQU	BUF+8
SAVE_A	EQU	BUF+10
EXTSP	EQU	BUF+11
DEFAB	EQU	BUF+13
ALT_MEM	EQU	KBUF
ALT_MEM2	EQU	ALT_MEM+64
ALT_MEM3	EQU	ALT_MEM2+64

	ORG	0100H
	CALL	0F36BH		;ページ1をメインRAMに切り替える
	LD	HL,KBUF
	LD	DE,KBUF+1
	LD	(HL),0
	LD	BC,317
	LDIR
	LD	HL,BUF
	LD	DE,BUF+1
	LD	(HL),0
	LD	BC,257
	LDIR
	LD	A,0C3H		;JP
	LD	(0),A		;WBOOT
	LD	(SYSTEM),A

	LD	C,06FH		;_DOSVER MSX-DOS のバージョン番号の獲得
	CALL	BDOS
	LD	A,B
	CP	2
	SBC	A,A
	LD	(ISDOS1),A
	JR	C,DOS1R
	LD	HL,N_SHELL	;DOS2の場合はCOMMAND.COMの読み込みに
	LD	DE,AT_COMMAND1+1	;ファイルハンドルを用いるものに差し替え
	LD	BC,6		;階層ディレクトリに対応の為
	LDIR
	LD	HL,AT_DOS2RELOAD
	LD	DE,AT_DOS1RELOAD
	LD	BC,DOS2RELOAD_-DOS2RELOAD
	LDIR
DOS1R:
	LD	HL,(MEMSIZ)
	LD	L,0
	LD	(EXTSP),HL
	LD	L,3
	DEC	H
	LD	(1),HL		;WBOOT
	INC	L
	DEC	H
	DEC	H
	LD	A,H
	LD	SP,HL
	EX	DE,HL
	LD	HL,REAL
	LD	BC,MAIN_END-MAIN
	LDIR
				;リロケータブル
	LD	H,A		;H:+0/A:+0
	LD	L,BDOS0+2
	LD	(HL),A
	INC	A
	LD	L,SYS09_+2
	LD	(HL),A
	INC	A		;A:+2
	INC	H		;H:+1
	INC	H		;H:+2
	LD	L,2
	LD	(HL),A
	LD	L,WBOOT+2-BOOT
	LD	(HL),A
	DEC	A		;A:+1
	LD	L,CONST_+2-BOOT
	LD	(HL),A
	LD	L,CONIN+2-BOOT
	LD	(HL),A
	LD	L,CONOUT+2-BOOT
	LD	(HL),A
	LD	L,FCBPAT+2-BOOT
	LD	(HL),A
	LD	L,SHOW_ERROR+2-BOOT
	LD	(HL),A
	DEC	H		;H:+1
	PUSH	HL
	DEC	H		;H:+0
	LD	L,BDOS0
	LD	(SYSTEM+1),HL
	LD	C,19H		;(BDOS)_CURDRV カレントドライブ番号の獲得
	CALL	BDOS
	INC	A
	POP	HL		;H:+1
	LD	L,FCBCMD-BOOT
	LD	(HL),A
	ADD	A,040H
	LD	(V_SHELL),A

	LD	A,(EXBRSA)
	OR	A
	LD	A,40
	JR	Z,MSX1
	LD	A,80		;MSX2以降は80桁で起動
MSX1:
	LD	(LINL40),A
	LD	IY,(EXPTBL)	;メインROMスロット
	LD	IX,INITXT
	CALL	CALSLT
	LD	IY,(EXPTBL)	;メインROMスロット
	LD	IX,SETTXT
	CALL	CALSLT

	LD	DE,TITLE
	LD	C,9
	CALL	BDOS
	LD	A,(ISDOS1)
	ADD	A,A
	JR	C,DOS1
	LD	E,'2'
	LD	C,2
	CALL	BDOS

	LD	HL,N_SHELL
	LD	DE,V_SHELL
	LD	C,06CH		;_SENV 環境変数のセット
	CALL	BDOS

	LD	A,(EXPTBL)	;メインROMスロット
	LD	HL,002BH	;キャラクターセット・日時フォーマット・ビデオ信号の種別
	CALL	RDSLT
	RRCA
	RRCA
	RRCA
	RRCA
	AND	3
	DEC	A
	LD	DE,V_DATE1
	JR	Z,DATEOK
	DEC	A
	LD	DE,V_DATE2
	JR	Z,DATEOK
	LD	DE,V_DATE0
DATEOK:
	LD	HL,N_DATE
	LD	C,06CH		;_SENV 環境変数のセット
	CALL	BDOS

	LD	HL,N_TIME
	LD	DE,V_TIME
	LD	C,06CH		;_SENV 環境変数のセット
	CALL	BDOS

DOS1:
	LD	DE,TITLE2
	LD	C,9
	CALL	BDOS
	LD	BC,9
	LD	HL,AUTOEXEC
	LD	DE,DTA1+1
	LDIR
	LD	A,9
	LD	HL,(1)
	LD	L,CBOOT & $FF
JP_HL:
	JP	(HL)
TITLE:
	DB	"DOS$"
TITLE2:
	DB	" for MSX v0.13 Gaku$"
AUTOEXEC:
	DB	"AUTOEXEC",0
N_SHELL:
	DB	"SHELL",0
V_SHELL:
	DB	"A:\\COMMAND.COM",0
N_DATE:
	DB	"DATE",0
V_DATE0:
	DB	"yy-mm-dd",0
V_DATE1:
	DB	"mm-dd-yy",0
V_DATE2:
	DB	"dd-mm-yy",0
N_TIME:
	DB	"TIME",0
V_TIME:
	DB	"24",0
Z_TIME:
	DS	64
ISDOS1:
	DB	0
REAL:
	ORG	4,REAL-0100H
MAIN:
	DW	0
BDOS0:
	JP	BDOS1
TERM:
	LD	HL,(DEFAB)
	LD	DE,0
	LD	(DEFAB),DE
	PUSH	DE
	JP	(HL)
BDOS1:
	LD	(SAVE_A),A
	LD	A,C
	OR	A
	JP	Z,0
	CP	062H		;_TERM エラーコードを返して終了
	JR	Z,TERM
	LD	(SAVE_SP),SP
	LD	SP,(EXTSP)
	CP	9		;_STROUT 文字列出力
SYS09_:
	JP	Z,_SYS09
	CP	063H		;_DEFAB アボート終了ルーチンの定義
	JR	NZ,BDOS2
	LD	(DEFAB),DE
BDOS2:
	LD	(SAVE_C),A
	CP	00FH		;_FOPEN ファイルオープン
	JR	C,SAVEFCB0
	CP	012H		;_SNEXT ファイル検索 続き
	JR	NZ,NOBD12
	LD	DE,(FCB11)
NOBD12:
	CP	018H		;_LOGIN ログインベクトルの獲得
	JR	C,SAVEFCB36
	CP	021H		;_RDRND ランダム読み出し
	JR	C,SAVEFCB0
	CP	028H+1		;_WRZER ゼロ書き込みを伴うランダム書き込み+1
	JR	C,SAVEFCB36
	CP	031H		;_DPARM ディスクパラメータの獲得
	JR	Z,SAVEFCB36
	CP	040H		;_FFIRST 最初のエントリ検索
	JR	Z,SAVE_PATH
	CP	042H		;_FNEW 新しいエントリの検索
	JR	Z,SAVE_PATH
	CP	043H		;_OPEN ファイルハンドルのオープン
	JR	Z,SAVE_PATH
	CP	044H		;_CREATE ファイルハンドルの作成
	JR	Z,SAVE_PATH
	CP	04CH 		;_HTEST ファイルハンドルの検査
	JR	Z,SAVE_PATH
	CP	050H		;_ATTR ファイル属性の獲得・設定
	JR	Z,SAVE_PATH
	CP	051H		;_FTIME ファイルの日付および時刻の獲得・設定
	JR	Z,SAVE_PATH
	CP	059H		;_GETCD カレントディレクトリの獲得
	JR	C,SAVEFCB0
	CP	05CH+1		;_PFILE ファイル名の解析+1
	JR	C,SAVE_PATH
	CP	05EH		;_WPATH パス文字列全体の獲得
	JR	Z,SAVE_PATH
	CP	066H		;_EXPLAIN エラーコードの説明
	JR	Z,SAVE_PATH
	JR	SAVEFCB0
SAVEFCB36:
SAVE_PATH:
	LD	A,D
	CP	03FH		;ページ1にかぶる？
	JR	C,SAVEFCB0
	CP	080H
	JR	NC,SAVEFCB0
	LD	A,36
	BIT	6,C		;DOS2のファンクションコール？
	JR	Z,SAVEFCB1
	LD	A,64		;DOS2CALLは64バイト設定する
	JR	SAVEFCB1
SAVEFCB0:
	XOR	A
SAVEFCB1:
	LD	(DE_MEM_SIZE),A
	OR	A
	JR	Z,BDOS3
	PUSH	BC
	PUSH	HL
	LD	(SAVE_DE),DE
	LD	C,A
	LD	B,0
	LD	HL,ALT_MEM
	EX	DE,HL
	PUSH	DE
	LDIR
	XOR	A
	LD	(DE),A
	POP	DE
	POP	HL
	POP	BC
BDOS3:
	XOR	A
	LD	(SAVE_IX+1),A
	LD	A,C
	CP	040H		;最初のエントリ検索
	JR	C,BDOS3IX	;次のエントリ検索
	CP	042H+1		;新しいエントリの検索
	JR	NC,BDOS3IX
	LD	A,IXH
	CP	03FH		;ページ1にかぶる？
	JR	C,BDOS3IX
	CP	080H		;
	JR	NC,BDOS3IX
	LD	(SAVE_IX),IX
	PUSH	BC
	PUSH	DE
	PUSH	HL
	PUSH	IX
	POP	HL
	LD	DE,ALT_MEM2
	LD	BC,64
	PUSH	DE
	LDIR
	POP	IX
	POP	HL
	POP	DE
	POP	BC
BDOS3IX:
	XOR	A
	LD	(SAVE_HL+1),A
	LD	A,C
	CP	052H		;_HDELETE ファイルハンドルの削除
	JR	Z,SAVE_HL1
	CP	05CH		;_PFILE ファイル名の解析
	JR	Z,SAVE_HL1
	CP	040H		;_FFIRST 最初のエントリ検索
	JR	Z,FIBCHECK
	CP	042H		;_FNEW 新しいエントリ検索
	JR	NZ,BDOS3HL
FIBCHECK:
	LD	A,(DE)
	INC	A		;DEがFIBならば0FFH
	JR	NZ,BDOS3HL
SAVE_HL1:
	LD	A,H
	CP	03FH		;ページ1にかぶる？
	JR	C,BDOS3HL
	CP	080H		;
	JR	NC,BDOS3HL
	LD	(SAVE_HL),HL
	PUSH	BC
	PUSH	DE
	LD	BC,11
	LD	DE,ALT_MEM3
	LDIR
	POP	DE
	POP	BC
	LD	HL,ALT_MEM3
BDOS3HL:
	LD	A,(SAVE_A)
	CALL	BDOS

	PUSH	AF

	LD	A,(SAVE_IX+1)		;最初のエントリ検索 + 次のエントリ検索
	OR	A
	JR	Z,BDOS4IX
	LD	IX,(SAVE_IX)
	PUSH	BC
	PUSH	DE
	PUSH	HL
	PUSH	IX
	POP	DE
	LD	HL,ALT_MEM2
	LD	BC,64
	LDIR
	POP	HL
	POP	DE
	POP	BC
BDOS4IX:
	LD	A,(DE_MEM_SIZE)
	OR	A
	JR	Z,BDOS4
	PUSH	BC
	PUSH	DE
	PUSH	HL
	LD	C,A
	LD	B,0
	LD	HL,ALT_MEM
	LD	DE,(SAVE_DE)
	LDIR
	POP	HL
	POP	DE
	POP	BC
BDOS4:
	LD	A,(SAVE_HL+1)
	OR	A
	JR	Z,BDOS5
	PUSH	BC
	PUSH	DE
	PUSH	HL
	LD	BC,11
	LD	HL,ALT_MEM3
	LD	DE,(SAVE_HL)
	LDIR
	POP	HL
	POP	DE
	POP	BC
BDOS5:
	LD	A,(DE_MEM_SIZE)
	JR	Z,BDOS6
	LD	A,(SAVE_C)
	CP	05BH		;_PARSE パス名の解析
	JR	Z,BDOSPARSE
	CP	05EH		;_WPATH パス文字列全体の獲得
	JR	NZ,BDOS6
BDOSPARSE:
	PUSH	BC
	LD	BC,ALT_MEM
	SBC	HL,BC		;CF=0のハズ
	LD	BC,(SAVE_DE)
	ADD	HL,BC
	EX	DE,HL
	LD	BC,ALT_MEM
	AND	A		;念のためにCF=0にする
	SBC	HL,BC
	LD	BC,(SAVE_DE)
	ADD	HL,BC
	EX	DE,HL
	POP	BC
BDOS6:
	POP	AF
S09X1:
	LD	SP,(SAVE_SP)
	RET

CONST1:
	LD	C,0BH
	JP	SYSTEM
CONIN1:
	LD	C,7
	JP	SYSTEM
CONOUT1:
	LD	E,C
	LD	C,2
	JP	SYSTEM

_SYS09:		;_STROUT 文字列出力
	LD	A,(DE)
	INC	DE
	CP	'$'
	JR	Z,S09X1
	PUSH	DE
	LD	C,2
	LD	E,A
	CALL	BDOS
	POP	DE
	JR	_SYS09

FCBCMD:
	ORG	$$+0100H	;$DEPHASE
AT_COMMAND1:
	ORG	FCBCMD,AT_COMMAND1-0100H
	DB	0,"COMMAND COM",0,0,0,0

ERROR:
	DB	00DH,00AH,"Insert System disk$"

AT:
	DS	0200H-37-AT
FCB_BAT:
	DS	37			;バッチファイル用のFCB
;			下位1バイト0になるように
BOOT:
	JP	WBOOT1
WBOOT:
	JP	WBOOT1
CONST_:			;(BDOS)コンソール直接入力
	JP	CONST1
CONIN:
	JP	CONIN1
CONOUT:
	JP	CONOUT1

WBOOT1:
	XOR	A
CBOOT:
	LD	(SAVE_A),A
	LD	SP,(SYSTEM+1)
RELOAD:
FCBPAT:	LD	HL,FCBCMD
DOS1RELOAD:
AT_DOS1RELOAD	EQU $$+0100H
	LD	DE,FCB1
	LD	BC,16
	LDIR

	LD	DE,FCB1
	LD	C,00FH		;(BDOS)_FOPEN ファイルオープン
	CALL	BDOS
	OR	A
	JR	NZ,SHOW_ERROR
	LD	HL,0
	LD	(FCB1+33),HL
	LD	(FCB1+35),HL
	INC	L
	LD	(FCB1+14),HL

	LD	DE,00100H
	LD	C,01AH		;(BDOS)DTAの設定
	CALL	BDOS

	LD	DE,FCB1
	LD	HL,0BF00H
	LD	C,027H		;(BDOS)ランダムブロックリード
	CALL	BDOS
READOK:
	LD	A,H
	OR	L
	LD	A,(SAVE_A)
	LD	(DTA1),A
	JP	NZ,0100H
SHOW_ERROR:
	LD	DE,ERROR
	LD	C,9
	CALL	BDOS
	LD	C,8
	CALL	BDOS
	XOR	A
	INC	H
	JR	RELOAD

MAIN_END:
	ORG	$$+0100H	;$DEPHASE
AT_DOS2RELOAD:
	ORG	DOS1RELOAD,AT_DOS2RELOAD-0100H
DOS2RELOAD:
	INC	HL		;HLは"SHELL"のポインタ
	LD	DE,ALT_MEM
	LD	B,64
	LD	C,06BH		;_GENV 環境変数の獲得
	CALL	BDOS
	LD	DE,ALT_MEM
	XOR	A
	LD	C,043H		;_OPEN ファイルハンドルのオープン
	CALL	BDOS
	OR	A
	JR	NZ,SHOW_ERROR
	PUSH	BC
	LD	DE,00100H
	LD	HL,0BF00H
	LD	C,48H		;_READ ファイルハンドルからの読み出し
	CALL	BDOS
	POP	BC
	OR	A
	JR	NZ,SHOW_ERROR
	PUSH	HL
	LD	C,45H		;_CLOSE ファイルハンドルのクローズ
	CALL	BDOS
	POP	HL
	JR	READOK
DOS2RELOAD_:
	ORG	$$+0100H	;$DEPHASE
