;	似非DOS

	INCLUDE	"DEF.ASM"

DE_MEM_SIZE	EQU	DIMFLG
SAVE_A	EQU	VALTYP
EXTSP	EQU	TEMP
DEFAB	EQU	SAVTXT
_DTA	EQU	DOT

ALT_MEM	EQU	KBUF
ALT_MEM2	EQU	ALT_MEM+64
ALT_MEM3	EQU	ALT_MEM2+64
SAVE_C	EQU	ALT_MEM3+64
SAVE_DE	EQU	SAVE_C+1
SAVE_IX	EQU	SAVE_DE+2
SAVE_HL	EQU	SAVE_IX+2

	ORG	00100H
	CALL	0F36BH		;ページ1をメインRAMに切り替える
	LD	A,0C3H		;JP
	LD	(0),A		;WBOOT
	LD	(SYSTEM),A
	XOR	A
	LD	(TRCFLG),A

	LD	HL,01234H		;NEXTOR チェックの為
	LD	DE,0ABCDH
	LD	IX,0
	LD	BC,05A6FH		;_DOSVER MSX-DOS のバージョン番号の獲得
	CALL	BDOS

	LD	A,IXH
	LD	(OS_EXT),A
	LD	A,B
	CP	2
	SBC	A,A
	LD	(ISDOS1),A
	JR	C,DOS1R
	LD	HL,N_SHELL	;DOS2の場合はCOMMAND.COMの読み込みに
	LD	DE,AT_COMMAND1+1	;ファイルハンドルを用いるものに差し替え
	LD	BC,6		;階層ディレクトリに対応の為
	LDIR
	LD	HL,AT_DOS2RELOAD
	LD	DE,AT_DOS1RELOAD
	LD	BC,DOS2RELOAD_-DOS2RELOAD
	LDIR
	JR	DOS2R
DOS1R:
	LD	HL,08A91H	;Tablacus Disk ROM Lite判別
	XOR	A
	SBC	HL,DE
	JR	NZ,DOS1R1
	DEC	A
DOS1R1:
	LD	(OS_EXT),A
DOS2R:
	LD	HL,(MEMSIZ)
	LD	L,0
	LD	(EXTSP),HL
	LD	L,3
	DEC	H
	LD	(1),HL		;WBOOT
	DEC	H
	DEC	H
	DEC	H
	LD	L,0
	LD	(BASE),HL
	LD	L,4
	LD	SP,HL
	EX	DE,HL
	LD	HL,REAL
	LD	BC,MAIN_END-MAIN
	LDIR
				;リロケータブル
	LD	HL,(BASE)
	LD	A,H
	LD	BC,BDOS0_SWC
	ADD	HL,BC
	ADD	A,(HL)
	LD	(HL),A

	LD	HL,(BASE)
	LD	A,H
	LD	BC,SYS09_SWC
	ADD	HL,BC
	ADD	A,(HL)
	LD	(HL),A

	LD	HL,(BASE)
	LD	A,H
	LD	BC,BOOT+2
	ADD	HL,BC
	ADD	A,(HL)
	LD	(HL),A

	LD	HL,(BASE)
	LD	A,H
	LD	BC,WBOOT+2
	ADD	HL,BC
	ADD	A,(HL)
	LD	(HL),A

	LD	HL,(BASE)
	LD	A,H
	LD	BC,RDABS_SWC
	ADD	HL,BC
	ADD	A,(HL)
	LD	(HL),A

	LD	HL,(BASE)
	LD	A,H
	LD	BC,WRABS_SWC
	ADD	HL,BC
	ADD	A,(HL)
	LD	(HL),A

	LD	HL,(BASE)
	LD	A,H
	LD	BC,BDOS_EXEC_SWC1
	ADD	HL,BC
	ADD	A,(HL)
	LD	(HL),A

	LD	HL,(BASE)
	LD	A,H
	LD	BC,BDOS_EXEC_SWC2
	ADD	HL,BC
	ADD	A,(HL)
	LD	(HL),A

	LD	HL,(BASE)
	LD	A,H
	LD	BC,BUF512_SWC1
	ADD	HL,BC
	ADD	A,(HL)
	LD	(HL),A

	LD	HL,(BASE)
	LD	A,H
	LD	BC,BUF512_SWC2
	ADD	HL,BC
	ADD	A,(HL)
	LD	(HL),A

	LD	HL,(BASE)
	LD	A,H
	LD	BC,BUF512_SWC3
	ADD	HL,BC
	ADD	A,(HL)
	LD	(HL),A

	LD	HL,(BASE)
	LD	A,H
	LD	BC,BUF512_SWC4
	ADD	HL,BC
	ADD	A,(HL)
	LD	(HL),A

	LD	HL,(BASE)
	LD	A,H
	LD	BC,SHOW_ERROR+2
	ADD	HL,BC
	ADD	A,(HL)
	LD	(HL),A

	LD	HL,(BASE)
	LD	A,H
	LD	BC,CONST_+2
	ADD	HL,BC
	ADD	A,(HL)
	LD	(HL),A

	LD	HL,(BASE)
	LD	A,H
	LD	BC,CONIN+2
	ADD	HL,BC
	ADD	A,(HL)
	LD	(HL),A

	LD	HL,(BASE)
	LD	A,H
	LD	BC,CONOUT+2
	ADD	HL,BC
	ADD	A,(HL)
	LD	(HL),A

	LD	HL,(BASE)
	LD	A,H
	LD	BC,FCBPAT+2
	ADD	HL,BC
	ADD	A,(HL)
	LD	(HL),A

	LD	HL,(BASE)
	LD	DE,BDOS1
	ADD	HL,DE
	EX	DE,HL

	LD	HL,(BASE)
	LD	L,BDOS0
	DEC	H
	DEC	H
	LD	(SYSTEM+1),HL
	LD	(HL),0C3H	;JP
	INC	HL
	LD	(HL),E
	INC	HL
	LD	(HL),D

	LD	C,19H		;(BDOS)_CURDRV カレントドライブ番号の獲得
	CALL	BDOS
	INC	A

	LD	HL,(BASE)
	LD	BC,FCBCMD
	ADD	HL,BC
	LD	(HL),A
	ADD	A,040H
	LD	(V_SHELL),A

	LD	A,40
	LD	(LINL40),A
	LD	IY,(EXPTBL-1) 	;メインROMスロット
	LD	IX,INITXT
	CALL	CALSLT
	LD	IY,(EXPTBL-1) 	;メインROMスロット
	LD	IX,SETTXT
	CALL	CALSLT

	LD	DE,TITLE
	LD	C,9
	CALL	BDOS
	LD	A,(ISDOS1)
	ADD	A,A
	JR	C,DOS1
	LD	E,'2'
	LD	C,2
	CALL	BDOS
	LD	A,(OS_EXT)
	CP	1
	JR	NZ,NONEXTOR
	LD	DE,TITLE_NEXTOR
	LD	C,9
	CALL	BDOS
NONEXTOR:
	LD	HL,N_SHELL
	LD	DE,V_SHELL
	LD	C,06CH		;_SENV 環境変数のセット
	CALL	BDOS

	LD	A,(EXPTBL)	;メインROMスロット
	LD	HL,002BH	;キャラクターセット・日時フォーマット・ビデオ信号の種別
	CALL	RDSLT
	RRCA
	RRCA
	RRCA
	RRCA
	AND	3
	DEC	A
	LD	DE,V_DATE1
	JR	Z,DATEOK
	DEC	A
	LD	DE,V_DATE2
	JR	Z,DATEOK
	LD	DE,V_DATE0
DATEOK:
	LD	HL,N_DATE
	LD	C,06CH		;_SENV 環境変数のセット
	CALL	BDOS

	LD	HL,N_TIME
	LD	DE,V_TIME
	LD	C,06CH		;_SENV 環境変数のセット
	CALL	BDOS
	JR	DOS2
DOS1:
	LD	A,(OS_EXT)
	CP	0FFH
	JR	NZ,NOTABLACUS
	LD	DE,TITLE_TABLACUS
	LD	C,9
	CALL	BDOS
NOTABLACUS:
DOS2:
	LD	DE,TITLE2
	LD	C,9
	CALL	BDOS

	LD	HL,VER_BCD
	LD	A,H
	CALL	PRTHX1
	LD	A,'.'
	CALL	MSG_A
	LD	A,L
	CALL	PRTHX

	LD	DE,TITLE3
	LD	C,9
	CALL	BDOS

	LD	BC,9
	LD	HL,AUTOEXEC
	LD	DE,DTA1+1
	LDIR
	LD	A,9
	LD	HL,(1)
	LD	L,CBOOT & $FF
JP_HL:
	JP	(HL)

PRTHX:
	PUSH	AF
	RLCA
	RLCA
	RLCA
	RLCA
	CALL	PRTHX1
	POP	AF
PRTHX1:
	CALL	ASC
MSG_A:
	PUSH	AF
	PUSH	BC
	PUSH	DE
	PUSH	HL
	PUSH	IX
	LD	E,A
	LD	C,2
	CALL	SYSTEM
	POP	IX
	POP	HL
	POP	DE
	POP	BC
	POP	AF
	RET

ASC:
	AND	00FH
	OR	'0'
	CP	'9'
	RET	C
	ADD	A,7
	RET

TITLE:
	DB	"pseudo DOS$"
TITLE_NEXTOR:
	DB	"(NEXTOR)$"
TITLE_TABLACUS:
	DB	"(Tablacus)$"
TITLE2:
	DB	" for MSX v$"
TITLE3:
	DB	" Gaku$"
AUTOEXEC:
	DB	"AUTOEXEC",0
N_SHELL:
	DB	"SHELL",0
V_SHELL:
	DB	"A:\\COMMAND.COM",0
N_DATE:
	DB	"DATE",0
V_DATE0:
	DB	"yy-mm-dd",0
V_DATE1:
	DB	"mm-dd-yy",0
V_DATE2:
	DB	"dd-mm-yy",0
N_TIME:
	DB	"TIME",0
V_TIME:
	DB	"24",0
Z_TIME:
	DS	64
ISDOS1:
	DB	0
OS_EXT:
	DB	0
BASE:
	DW	0
REAL:
	ORG	4,REAL-0100H
MAIN:
	DW	0
BDOS0:
	JP	BDOS1
BDOS0_SWC	EQU	$-1
TERM:
	LD	A,B
	LD	(TRCFLG),A
	LD	HL,0
	PUSH	HL
	LD	HL,(DEFAB)
	JP	(HL)
BDOS1:
	INC	C
	DEC	C
				;BDOS0+013Hを0にするとバッチ停止されるため0が書き込みされる場合がある
	JP	Z,0		;だから、ここのアドレスをBDOS0+011HもしくはBDOS0+012Hにする
	LD	(SAVSTK),SP
	LD	(SAVE_A),A
	LD	A,C
	CP	062H		;_TERM エラーコードを返して終了
	JR	Z,TERM
	LD	SP,(EXTSP)
	CP	9		;_STROUT 文字列出力
	JP	Z,_SYS09
SYS09_SWC	EQU 	$-1
	CP	063H		;_DEFAB アボート終了ルーチンの定義
	JR	NZ,BDOS2
	LD	(DEFAB),DE
BDOS2:
	CP	01AH		;_SETDTA DTAの設定
	JR	NZ,BDOS2_
	LD	(_DTA),DE
BDOS2_:
	LD	(SAVE_C),A
	CP	00FH		;_FOPEN ファイルオープン
	JR	C,SAVEFCB0
	CP	012H		;_SNEXT ファイル検索 続き
	JR	NZ,NOBD12
	LD	DE,(FCB11)
NOBD12:
	CP	018H		;_LOGIN ログインベクトルの獲得
	JR	C,SAVEFCB36
	CP	021H		;_RDRND ランダム読み出し
	JR	C,SAVEFCB0
	CP	028H+1		;_WRZER ゼロ書き込みを伴うランダム書き込み+1
	JR	C,SAVEFCB36
	CP	031H		;_DPARM ディスクパラメータの獲得
	JR	Z,SAVEFCB36
	CP	040H		;_FFIRST 最初のエントリ検索
	JR	Z,SAVE_PATH
	CP	042H		;_FNEW 新しいエントリの検索
	JR	Z,SAVE_PATH
	CP	043H		;_OPEN ファイルハンドルのオープン
	JR	Z,SAVE_PATH
	CP	044H		;_CREATE ファイルハンドルの作成
	JR	Z,SAVE_PATH
	CP	04CH 		;_HTEST ファイルハンドルの検査
	JR	Z,SAVE_PATH
	CP	04DH		;_DELETE ファイル、サブディレクトリの削除
	JR	C,SAVEFCB0
	CP	051H+1		;_FTIME ファイルの日付および時刻の獲得・設定
	JR	C,SAVE_PATH
	CP	059H		;_GETCD カレントディレクトリの獲得
	JR	C,SAVEFCB0
	CP	05CH+1		;_PFILE ファイル名の解析+1
	JR	C,SAVE_PATH
	CP	05EH		;_WPATH パス文字列全体の獲得
	JR	Z,SAVE_PATH
	CP	066H		;_EXPLAIN エラーコードの説明
	JR	Z,SAVE_PATH
	JR	SAVEFCB0
SAVEFCB36:
SAVE_PATH:
	LD	A,D
	CP	03FH		;ページ1にかぶる？
	JR	C,SAVEFCB0
	CP	080H
	JR	NC,SAVEFCB0
	LD	A,36
	BIT	6,C		;DOS2のファンクションコール？
	JR	Z,SAVEFCB1
	LD	A,64		;DOS2CALLは64バイト設定する
	JR	SAVEFCB1
SAVEFCB0:
	XOR	A
SAVEFCB1:
	LD	(DE_MEM_SIZE),A
	OR	A
	JR	Z,BDOS3
	PUSH	BC
	PUSH	HL
	LD	(SAVE_DE),DE
	LD	C,A
	LD	B,0
	LD	HL,ALT_MEM
	EX	DE,HL
	PUSH	DE
	LDIR
	XOR	A
	LD	(DE),A
	POP	DE
	POP	HL
	POP	BC
BDOS3:
	XOR	A
	LD	(SAVE_IX+1),A
	LD	A,C
	CP	040H		;最初のエントリ検索
	JR	C,BDOS3IX	;次のエントリ検索
	CP	042H+1		;新しいエントリの検索
	JR	NC,BDOS3IX
	LD	A,IXH
	CP	03FH		;ページ1にかぶる？
	JR	C,BDOS3IX
	CP	080H		;
	JR	NC,BDOS3IX
	LD	(SAVE_IX),IX
	PUSH	BC
	PUSH	DE
	PUSH	HL
	PUSH	IX
	POP	HL
	LD	DE,ALT_MEM2
	LD	BC,64
	PUSH	DE
	LDIR
	POP	IX
	POP	HL
	POP	DE
	POP	BC
BDOS3IX:
	XOR	A
	LD	(SAVE_HL+1),A
	LD	A,C
	CP	4EH		;_RENAME ファイルあるいはサブディレクトリ名の変更
	JR	Z,SAVE_HL1
	CP	4FH		;_MOVE ファイルあるいはサブディレクトリの移動
	JR	Z,SAVE_HL1
	CP	53H		;_HRENAME ファイルハンドルの名前の変更
	JR	Z,SAVE_HL1
	CP	54H		;_HMOVE ファイルハンドルの移動
	JR	Z,SAVE_HL1
	CP	05CH		;_PFILE ファイル名の解析
	JR	Z,SAVE_HL1
	CP	040H		;_FFIRST 最初のエントリ検索
	JR	Z,FIBCHECK
	CP	042H		;_FNEW 新しいエントリ検索
	JR	NZ,BDOS3HL
FIBCHECK:
	LD	A,(DE)
	INC	A		;DEがFIBならば0FFH
	JR	NZ,BDOS3HL
SAVE_HL1:
	LD	A,H
	CP	03FH		;ページ1にかぶる？
	JR	C,BDOS3HL
	CP	080H		;
	JR	NC,BDOS3HL
	LD	(SAVE_HL),HL
	PUSH	BC
	PUSH	DE
	LD	BC,64
	LD	DE,ALT_MEM3
	LDIR
	POP	DE
	POP	BC
	LD	HL,ALT_MEM3
BDOS3HL:
	LD	A,C
	CP	02FH
	JP	Z,RDABS
RDABS_SWC	EQU	$-1
	CP	030H
	JP	Z,WRABS
WRABS_SWC	EQU	$-1
BDOS_EXEC:
	LD	A,(SAVE_A)
	CALL	BDOS

	PUSH	AF

	LD	A,(SAVE_IX+1)		;最初のエントリ検索 + 次のエントリ検索
	OR	A
	JR	Z,BDOS4IX
	LD	IX,(SAVE_IX)
	PUSH	BC
	PUSH	DE
	PUSH	HL
	PUSH	IX
	POP	DE
	LD	HL,ALT_MEM2
	LD	BC,64
	LDIR
	POP	HL
	POP	DE
	POP	BC
BDOS4IX:
	LD	A,(DE_MEM_SIZE)
	OR	A
	JR	Z,BDOS4
	PUSH	BC
	PUSH	DE
	PUSH	HL
	LD	C,A
	LD	B,0
	LD	HL,ALT_MEM
	LD	DE,(SAVE_DE)
	LDIR
	POP	HL
	POP	DE
	POP	BC
BDOS4:
	LD	A,(SAVE_HL+1)
	OR	A
	JR	Z,BDOS5
	PUSH	BC
	PUSH	DE
	PUSH	HL
	LD	BC,11
	LD	HL,ALT_MEM3
	LD	DE,(SAVE_HL)
	LDIR
	POP	HL
	POP	DE
	POP	BC
BDOS5:
	LD	A,(SAVE_C)
	CP	06FH		;_DOSVER MSX-DOSのバージョン番号の獲得
	JR	NZ,BDOS7
	INC	B
	DEC	B
	JR	Z,S6F_1
	LD	E,C		;DOS2の場合
	LD	D,B		;MSXDOS2.SYSのバージョンをカーネルに合わす
S6F_1:
	DEC	IXH		;NEXTOR判別
	JR	Z,NEXTOR
	LD	IX,0ECEDH	;似非DOS判別用(INC IXがあるのでIXが0EDEDHになる)
	LD	HL,VER_BCD	;NEXTORじゃない場合はHLに似非DOSのバージョンが返る
NEXTOR:
	INC	IXH
BDOS7:
	CP	05BH		;_PARSE パス名の解析
	JR	Z,BDOS8
	CP	05EH		;_WPATH パス文字列全体の獲得
	JR	NZ,BDOS6
BDOS8:
	LD	A,(DE_MEM_SIZE)
	JR	Z,BDOS6
	PUSH	BC
	LD	BC,ALT_MEM
	SBC	HL,BC		;CF=0のハズ
	LD	BC,(SAVE_DE)
	ADD	HL,BC
	EX	DE,HL
	LD	BC,ALT_MEM
	AND	A		;念のためにCF=0にする
	SBC	HL,BC
	LD	BC,(SAVE_DE)
	ADD	HL,BC
	EX	DE,HL
	POP	BC
BDOS6:
	POP	AF
S09X1:
	LD	SP,(SAVSTK)
	RET

CONST1:
	LD	C,0BH
	JP	SYSTEM
CONIN1:
	LD	C,7
	JP	SYSTEM
CONOUT1:
	LD	E,C
	LD	C,2
	JP	SYSTEM

_SYS09:		;_STROUT 文字列出力
	LD	A,(DE)
	INC	DE
	CP	'$'
	JR	Z,S09X1
	PUSH	DE
	LD	C,2
	LD	E,A
	CALL	BDOS
	POP	DE
	JR	_SYS09

RDABS:
	LD	A,(_DTA+1)
	ADD	A,A
	JP	C,BDOS_EXEC
BDOS_EXEC_SWC1	EQU	$-1

	PUSH	DE
	PUSH	HL
	LD	DE,TERM-0200H
BUF512_SWC1	EQU	$-1
	LD	C,01AH		;_SETDTA
	CALL	BDOS
	POP	HL
	POP	DE

	LD	BC,(_DTA)
RDABS1:
	PUSH	DE
	PUSH	HL
	PUSH	BC
	LD	H,1
	LD	C,02FH		;_RDABS
	CALL	BDOS
	POP	HL		;<=転送先
	CP	0FFH
	JR	Z,RDABS_ERR
	EX	DE,HL
	LD	HL,TERM-0200H
BUF512_SWC2	EQU	$-1
	LD	BC,512
	LDIR
	LD	C,E
	LD	B,D
	POP	HL
	POP	DE
	INC	DE
	DEC	H
	JR	NZ,RDABS1
WRABS_OK:
	XOR	A
WRABS_ERR:
	PUSH	DE
	PUSH	HL
RDABS_ERR:
	PUSH	AF
	LD	DE,(_DTA)
	LD	C,01AH		;_SETDTA
	CALL	BDOS
	POP	AF
	POP	HL
	POP	DE
	LD	SP,(SAVSTK)
	RET

WRABS:
	LD	A,(_DTA+1)
	ADD	A,A
	JP	C,BDOS_EXEC
BDOS_EXEC_SWC2	EQU	$-1
	PUSH	DE
	PUSH	HL
	LD	DE,TERM-0200H
BUF512_SWC3	EQU	$-1
	LD	C,01AH		;_SETDTA
	CALL	BDOS
	POP	HL
	POP	DE

	LD	BC,(_DTA)
WRABS1:
	PUSH	DE
	PUSH	HL
	LD	L,C
	LD	H,B
	LD	DE,TERM-0200H
BUF512_SWC4	EQU	$-1
	LD	BC,512
	LDIR
	EX	(SP),HL
	POP	DE

	PUSH	DE
	PUSH	HL
	LD	H,1
	LD	C,030H		;_WRABS
	CALL	BDOS
	POP	HL
	POP	DE
	POP	BC
	CP	0FFH
	JR	Z,WRABS_ERR
	INC	DE
	DEC	H
	JR	NZ,WRABS1
	JR	WRABS_OK

FCBCMD:
	ORG	$$+0100H	;$DEPHASE
AT_COMMAND1:
	ORG	FCBCMD,AT_COMMAND1-0100H
	DB	0,"COMMAND COM",0,0,0,0

AT:
	DS	0300H-37-AT
FCB_BAT:
	DS	37			;バッチファイル用のFCB
;			下位1バイト0になるように
BOOT:
	JP	WBOOT1
WBOOT:
	JP	WBOOT1
CONST_:			;(BDOS)コンソール直接入力
	JP	CONST1
CONIN:
	JP	CONIN1
CONOUT:
	JP	CONOUT1

WBOOT1:
	XOR	A
CBOOT:
	LD	(SAVE_A),A
	LD	SP,(SYSTEM+1)
RELOAD:
FCBPAT:	LD	HL,FCBCMD
DOS1RELOAD:
AT_DOS1RELOAD	EQU $$+0100H
	LD	DE,FCB1
	LD	BC,16
	LDIR

	LD	DE,FCB1
	LD	C,00FH		;(BDOS)_FOPEN ファイルオープン
	CALL	BDOS
	OR	A
	JR	NZ,SHOW_ERROR
	LD	HL,0
	LD	(FCB1+33),HL
	LD	(FCB1+35),HL
	INC	L
	LD	(FCB1+14),HL

	LD	DE,00100H
	LD	C,01AH		;(BDOS)DTAの設定
	CALL	BDOS

	LD	DE,FCB1
	LD	HL,0BF00H
	LD	C,027H		;(BDOS)ランダムブロックリード
	CALL	BDOS
READOK:
	LD	A,H
	OR	L
	LD	A,(SAVE_A)
	LD	(DTA1),A
	LD	HL,0
	LD	(DEFAB),HL	;DEFABの初期化
	JP	NZ,0100H
SHOW_ERROR:
	LD	DE,ERROR
	LD	C,9
	CALL	BDOS
	LD	C,8
	CALL	BDOS
	XOR	A
	INC	H
	JR	RELOAD

ERROR:
	DB	00DH,00AH,"Insert System disk$"

MAIN_END:
	ORG	$$+0100H	;$DEPHASE
AT_DOS2RELOAD:
	ORG	DOS1RELOAD,AT_DOS2RELOAD-0100H
DOS2RELOAD:
	INC	HL		;HLは"SHELL"のポインタ
	LD	DE,ALT_MEM
	LD	B,64
	LD	C,06BH		;_GENV 環境変数の獲得
	CALL	BDOS
	LD	DE,ALT_MEM
	XOR	A
	LD	C,043H		;_OPEN ファイルハンドルのオープン
	CALL	BDOS
	OR	A
	JR	NZ,SHOW_ERROR
	PUSH	BC
	LD	DE,00100H
	LD	HL,0BF00H
	LD	C,48H		;_READ ファイルハンドルからの読み出し
	CALL	BDOS
	POP	BC
	OR	A
	JR	NZ,SHOW_ERROR
	PUSH	HL
	LD	C,45H		;_CLOSE ファイルハンドルのクローズ
	CALL	BDOS
	POP	HL
	JR	READOK
DOS2RELOAD_:
	ORG	$$+0100H	;$DEPHASE
