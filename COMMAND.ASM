
;	似非COMMAND.COM

SYSTEM	EQU	00005H
FCB1	EQU	0005CH
FCB2	EQU	0006CH
DTA1	EQU	00080H

CALSLT	EQU	0001CH
INITXT	EQU	0006CH
INIT32	EQU	0006FH
SETTXT	EQU	00078H
SETT32	EQU	0007BH

LINL40	EQU	0F3AEH
LINL32	EQU	0F3AFH
LINLEN	EQU	0F3B0H
BUF	EQU	0F55EH
INTFLG	EQU	0FC9BH
EXPTBL	EQU	0FCC1H


PATHX	EQU	32
PATHD	EQU	BUF+258-32

DATA	EQU	08000H

	ORG	0100H
	JP	START
VER:	DB	00DH,00AH,"COMMAND v0.05",00DH,00AH,'$'
START:
	LD	SP,(SYSTEM+1)
	LD	C,06FH		;(BDOS)MSX-DOS のバージョン番号の獲得
	CALL	SYSTEM
	RET	C
	LD	HL,0011DH
	SBC	HL,BC
	LD	A,B
	LD	(MAJOR_VER),A
	OR	L
	LD	(IS_MSX),A
	OR	A
	JR	Z,WSTART
	LD	HL,(SYSTEM+1)
	LD	L,256-37
	INC	H
	LD	(FCB_BAT),HL
	LD	A,(DTA1)
	OR	A
	JR	Z,WSTART
	LD	DE,VER
	LD	C,9
	CALL	SYSTEM
	LD	DE,DTA1+1
	CALL	COMANL
WSTART:
	CALL	LTNL
COMMAND:
	PUSH	HL
	LD	HL,(FCB_BAT)
	LD	A,(HL)
	POP	HL
	OR	A
	JP	NZ,C_BAT1
	CALL	SETDTA1
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	C,019H
	CALL	SYSTEM
	POP	HL
	POP	BC
	ADD	A,'A'
	LD	E,A
	CALL	_PRINT
	LD	E,'>'
	CALL	_PRINT
	POP	DE		;DE=DTA1
	LD	A,80
	LD	(DE),A
	LD	C,0AH		;(BDOS)文字列入力
	CALL	SYSTEM
	CALL	LTNL
COMMAND2:
	LD	DE,DTA1+2
	CALL	COMANL
	JR	NC,COMMAND
	LD	DE,COMERM
	LD	C,9		;(BDOS)文字列出力
	CALL	SYSTEM
	JR	WSTART

COMANL:
	CALL	FILE
	PUSH	DE
	LD	DE,FNAME
	LD	A,(DE)
	CP	020H
	JR	Z,SDVSW
	DEC	DE
	LD	A,(DE)
	ADD	A,0FFH
	JR	C,COMB
	INC	DE

	LD	HL,COMTB
	LD	A,COMS
	LD	B,A
	CALL	CPNAME
COMB:
	POP	DE
	JP	NC,JP_HL
COMB2:
	EX	DE,HL
	LD	(COMPAT+1),HL
	PUSH	AF
	CALL	CEXE4
	POP	AF
	LD	HL,FNAME
	LD	DE,FCB2+1	;COMMAND NAME
	LD	BC,11
	LDIR
	LD	DE,PATHD
	LD	A,(IS_MSX)
	OR	A
	JR	NZ,CEX1
	LD	DE,ZERO
CEX1:
	LD	A,(DE)
	CP	020H
	RET	C
	CALL	FILEC
	PUSH	DE
	LD	HL,FCB2+1	;COMMAND NAME
	LD	DE,FNAME
	LD	BC,11
	LDIR
	CALL	CEXE4
	POP	DE
	INC	DE
	JR	CEX1

SDVSW:
	POP	AF
	LD	A,(FDRV)
	DEC	A
	LD	E,A
	LD	C,00EH		;(BDOS)カレントドライブの設定
	JP	SYSTEM0

OPEN1_D2:			;DOS2対応
	LD	A,(MAJOR_VER)
	CP	2
	JR	C,OPEN1

	LD	DE,PATH_CCP
	LD	IX,SEARCH_IX
	LD	BC,01040H	;(BDOS)最初のエントリ検索
	CALL	SYSTEM
FIB2DIRENT:
	OR	A
	RET	NZ

	LD	DE,SEARCH_IX+1
	LD	HL,DTA_CCP+1
	LD	C,05CH		;(BDOS)ファイル名の解析
	CALL	SYSTEM

	LD	HL,SEARCH_IX+14
	LD	DE,DTA_CCP+1+8+3
	LDI
	LD	DE,DTA_CCP+1+8+3+1+10
	LD	BC,2+2+2+4	;最終変更時刻+最終変更日付+開始クラスタ+ファイルサイズ
	LDIR
	XOR	A
	RET

OPEN1:
	LD	HL,FDRV
OPEN:
	LD	C,011H		;(BDOS)最初のファイルの検索
OPEN3:
	PUSH	DE
	LD	DE,DTA_CCP
	CALL	SETDTA
	EX	DE,HL
	CALL	SYSTEM
	POP	DE
	OR	A
	RET

OPEN2_D2:			;DOS2対応
	LD	A,(MAJOR_VER)
	CP	2
	JR	C,OPEN2
	LD	IX,SEARCH_IX
	LD	C,41H		;(BDOS)次のエントリ検索
	CALL	SYSTEM
	JR	FIB2DIRENT
OPEN2:
	LD	C,012H
	JR	OPEN3

DEFCB:				;Z=Ok NZ=Error
	LD	DE,DTA_CCP
	CALL	SYSC0F

	LD	HL,1
	LD	(DTA_CCP+14),HL
	DEC	L
	LD	(DTA_CCP+33),HL
	LD	(DTA_CCP+35),HL
SETDTA100:
	LD	DE,DATA
SETDTA:
	PUSH	BC
	PUSH	DE
	PUSH	HL
	LD	C,01AH		;(BDOS)DTAの設定
	CALL	SYSTEM
	POP	HL
	POP	DE
	POP	BC
	RET

SETDTA1:
	LD	DE,DTA1
	JR	SETDTA

SYSC0F:
	LD	C,00FH		;(BDOS)ファイルのオープン
SYSTEM0:
	CALL	SYSTEM
	OR	A
	RET

C_CD:
	CALL	FILEC_D2
	LD	DE,PATH_CCP
	LD	C,5AH		;(BDOS)CHDIR カレントディレクトリの変更
	JP	SYSTEM

S27DTA:
	LD	DE,1
	LD	(DTA_CCP+14),DE
	LD	DE,DTA_CCP
S27:
	LD	C,027H		;(BDOS)ランダム・ブロック・リード
	CALL	SYSTEM
	OR	A
	RET

CEXE4:
	LD	A,(FDRV)
	LD	(00057H),A
	LD	HL,(FDRV+14)
	LD	(00058H),HL

	LD	HL,FNAME+8
	LD	A,(HL)
	CP	020H
	JR	NZ,CEXE7
	LD	A,'?'
	LD	(HL),A
	INC	HL
	LD	(HL),A
	INC	HL
	LD	(HL),A
CEXE7:
	CALL	OPEN1
CEXE5:
	RET	NZ
	LD	HL,(DTA_CCP+1+9)
	LD	A,H
	CALL	CAP
	LD	H,A
	LD	A,L
	CALL	CAP
	LD	L,A
	LD	A,(DTA_CCP+1+8)
	CALL	CAP
	SUB	'B'
	JR	Z,C_BAT
	DEC	A		;'C'
	JR	Z,C_EXE
CEXE6:
	CALL	OPEN2
	JR	CEXE5

C_EXE:
	LD	A,H
	CP	'M'
	JR	NZ,CEXE6

	CALL	DEFCB

	LD	DE,DATA_COM
	CALL	SETDTA

	LD	HL,(SYSTEM+1)
	LD	DE,DATA_COM
	SBC	HL,DE

	CALL	S27DTA
	DEC	A
	SCF
	RET	NZ
	LD	A,H
	OR	L
	SCF
	RET	Z
	LD	(COMSIZ+1),HL

	LD	DE,DATA_COM
	CALL	SETDTA
COMPAT:	LD	DE,0
	CALL	SETFCB

	XOR	A
	LD	H,A
	LD	L,A	;HL=0x0000
	DI
SPPAT:	LD	SP,(SYSTEM+1)
	PUSH	HL
	LD	HL,0B0EDH	;LDIR
	LD	(000FEH),HL
	LD	HL,DATA_COM
	LD	DE,00100H
COMSIZ:	LD	BC,0
	EI
	JP	000FEH

C_BAT:
	LD	DE,'A'+'T'*256
	SBC	HL,DE
	JR	NZ,CEXE6

	CALL	DEFCB

	LD	HL,DTA_CCP
	LD	DE,(FCB_BAT)
	LD	BC,37
	LDIR
C_BAT1:
	CALL	SETDTA100
	CALL	FGETC_BAT
	LD	HL,DTA1+1
	JR	NZ,END_BATCH
	CP	021H		;スペースや改行など制御文字を飛ばす
	JR	C,C_BAT1
	LD	(HL),' '
	INC	HL
C_BAT2:
	LD	(HL),A
	INC	HL
	LD	A,L
	INC	A		;L==0FFH
	JR	Z,RUN_BATCH
	CALL	FGETC_BAT
	JR	NZ,RUN_BATCH
	CP	020H
	JR	NC,C_BAT2
RUN_BATCH:
	LD	A,L
	SUB	DTA1-1
	LD	(DTA1),A
	CP	4
	JR	C,END_BATCH
	LD	(HL),0
	LD	A,(INTFLG)
	CP	3
	JP	NZ,COMMAND2
END_BATCH:		;バッチファイルを閉じる
	LD	HL,(FCB_BAT)
	LD	(HL),0
	LD	SP,(SYSTEM+1)
	JP	WSTART

FGETC_BAT:
	LD	DE,(FCB_BAT)
FGETC:				;1文字ずつ読み込む
	PUSH	HL		;Z:成功
	LD	HL,1
	CALL	S27
	POP	HL
	LD	A,(DATA)
	RET

C_REM:
	XOR	A
	RET

C_DEL:
	CALL	SETFCB
	LD	C,8		;(BDOS)エコーなしコンソール入力
	CALL	SYSTEM

	LD	C,013H
	JR	CDEL1		;(BDOS)ファイルの削除

C_REN:
	CALL	SETFCB
	LD	A,010H		;ディレクトリも対象にする(LSX-Dodgers)
	LD	(FCB1+13),A	;属性
	LD	C,017H		;(BDOS)ファイル名の変更
CDEL1:
	LD	DE,FCB1
	CALL	SYSTEM
	ADD	A,0FFH
	RET

C_DIR:
	CALL	FILEC_D2
	LD	HL,FDRV+1
	CALL	CWILD1
	LD	A,0F1H
	LD	(FDRV+13),A
	CALL	OPEN1_D2
CDIR1:
	OR	A
	JR	NZ,PDSKF
	CALL	P_NAME
	CALL	OPEN2_D2
	JR	CDIR1

PDSKF:
	LD	A,(FDRV)
	LD	E,A
	LD	C,01BH		;(BDOS)ディスク情報の獲得
	CALL	SYSTEM
	LD	C,A		;C←1クラスタ辺りの論理セクタ数
	ADD	A,001H
	RET	C		;Aが0FFHだった場合
	LD	A,8-2
PDS1:				;HL=未使用クラスタの総数
	INC	A
	RR	C
	JR	NC,PDS1
PDS2:				;B←論理セクタのサイズの上位8ビット
	INC	A
	RR	B
	JR	NC,PDS2
	LD	B,A

	LD	DE,0
PDS3:
	ADD	HL,HL
	EX	DE,HL
	ADC	HL,HL
	EX	DE,HL
	DJNZ	PDS3
PDSKF1:
	CALL	PRDEC_DEHL
	LD	DE,FREE
	LD	C,9		;(BDOS)文字列出力
	CALL	SYSTEM
	CALL	PUTDRV
	LD	A,05CH
	CALL	MSG_A
	LD	A,(MAJOR_VER)
	CP	1
	JR	C,LTNL
	JR	NZ,PDSKF2
	LD	HL,(FDRV+14)
	XOR	A
	LD	DE,0-2
	ADD	HL,DE
	INC	HL
	CALL	C,PRDEC_HL
	JR	LTNL
PDSKF2:				;MSX-DOS2
	LD	A,(FDRV)
	LD	B,A		;ドライブ
	LD	DE,DATA
	LD	C,059H		;(BDOS)GETCD カレントディレクトリの獲得
	CALL	SYSTEM
	LD	HL,DATA

	CALL	MSX
	JR	LTNL

MSX1:
	LD	E,A
	CALL	_PRINT
MSX:
	LD	A,(HL)
	INC	HL
	OR	A
	JR	NZ,MSX1
	RET

P_NAME:
	LD	HL,DTA_CCP+1
	LD	A,(HL)
	CP	'.'
	RET	Z
	CALL	FPRNT
	LD	A,(DTA_CCP+12)
	BIT	4,A
	JR	Z,DIR3
	LD	DE,DIRMES
	LD	C,9		;(BDOS)文字列出力
	CALL	SYSTEM
	JR	DIR6
DIR3:
	LD	DE,(DTA_CCP+1+01EH)
	LD	HL,(DTA_CCP+1+01CH)
	CALL	PRDEC_DEHL
DIR6:
	CALL	PRTTMS

LTNL:
	LD	E,00DH
	CALL	_PRINT
	LD	E,00AH
	JP	_PRINT

C_PATH:
	LD	A,(IS_MSX)
	OR	A
	RET	Z
	CALL	SPCUT
	LD	HL,PATHD
	CP	021H
	JR	NC,CPATH0
CPATHP:
	LD	A,(HL)
	INC	HL
	CP	020H
	CCF
	JR	NC,LTNL
	CALL	MSG_A
	JR	CPATHP
CPATH0:
	CP	';'
	JR	NZ,CPATH1
	INC	DE
CPATH1:
	EX	DE,HL
	LD	BC,PATHX
	LDIR
	RET

PUTDRV:
	LD	A,(FDRV)
	OR	A
	JR	NZ,PUTDRV1
	PUSH	BC
	PUSH	DE
	PUSH	HL
	LD	C,019H
	CALL	SYSTEM
	POP	HL
	POP	DE
	POP	BC
	INC	A
PUTDRV1:
	ADD	A,'A'-1
	CALL	MSG_A
	LD	A,':'
MSG_AR:
	JP	MSG_A

PRDEC_HL:
	XOR	A
PRDEC_AHL:
	LD	E,A
	LD	D,0
PRDEC_DEHL:
	LD	A,2
	LD	(DEC6+1),A
	XOR	A
	PUSH	HL
	LD	HL,DECBF
	LD	B,5
	CALL	FILL_MEMORY
	POP	HL

	LD	C,32
DEC1:
	ADD	HL,HL
	EX	DE,HL
	ADC	HL,HL
	EX	DE,HL
	PUSH	HL
	LD	HL,DECBF+4
	LD	B,5
DEC2:
	LD	A,(HL)
	ADC	A,A
	DAA
	LD	(HL),A
	DEC	HL
	DJNZ	DEC2
	POP	HL
	DEC	C
	JR	NZ,DEC1

	LD	HL,DECBF
	LD	A,020H
	LD	B,4
DEC3:
	CALL	DEC4
	CALL	DEC4
	INC	HL
	DJNZ	DEC3
DECX:
	CALL	DEC4
	XOR	A
DEC4:
	RLD
	CP	020H
	JR	Z,DEC6
	OR	030H
DEC5:
	JR	MSG_AR
DEC7:
	LD	A,020H
	JR	MSG_AR
DEC6:
	LD	A,2
	OR	A
	JR	Z,DEC7
	DEC	A
	LD	(DEC6+1),A
	LD	A,020H
	RET

FPRNT:
	LD	B,8
	CALL	P_N1
	LD	A,(HL)
	ADD	A,0A0H-020H
	CP	0A0H
	JR	Z,FPR1
	LD	A,'.'
FPR1:
	CALL	MSG_A
	LD	B,3

P_N1:
	PUSH	BC
	PUSH	HL
	LD	A,(HL)
	CALL	CAP3
	CALL	MSG_A
	POP	HL
	POP	BC
	INC	HL
	DJNZ	P_N1
	RET

PRTTMS:
	LD	A,020H
	CALL	MSG_A

	LD	HL,(DTA_CCP+1+24)
	LD	A,L
	OR	A
	RET	Z
	SRL	H
	RLA
	RLA
	RLA
	RLA
	AND	00FH
	LD	D,A
	LD	A,H
	ADD	A,80
	CALL	PRDEC_A
	LD	A,'-'
	CALL	MSG_A
	LD	A,D
	CALL	PRDEC_A
	LD	A,'-'
	CALL	MSG_A
	LD	A,L
	AND	01FH
	CALL	PRDEC_A

	CALL	GET_WIDTH
	CP	32+1
	JR	NC,SHOW_TIME
	LD	A,01DH
	JP	MSG_A
SHOW_TIME:
	LD	HL,(DTA_CCP+1+22)

	LD	A,020H
	CALL	MSG_A
	LD	A,H
	LD	H,L
	RRA
	RR	L
	RRA
	RR	L
	RRA
	RR	L
	AND	01FH
	CALL	PRDEC_A
	LD	A,':'
	CALL	MSG_A
	LD	A,L
	RRCA
	RRCA
	AND	03FH
	CALL	PRDEC_A

	LD	A,':'
	CALL	MSG_A
	LD	A,H
	AND	01FH
	ADD	A,A

;	PRINT10

PRDEC_A:
	PUSH	HL
	LD	B,8
	LD	C,A
	XOR	A
PRTA1:
	RLC	C
	ADC	A,A
	DAA
	DJNZ	PRTA1
	LD	HL,DECBF
	LD	(HL),A
	XOR	A
	CALL	DECX
	POP	HL
	RET

SETFCB:
	CALL	SPCUT
	LD	A,(DE)
	CP	020H
	JR	C,SETFCBA
	DEC	DE
SETFCBA:
	PUSH	DE
	LD	HL,FCB1
	LD	DE,FCB1+1
	LD	BC,00023H
	LD	(HL),B		;B=0
	LDIR
	POP	DE
	PUSH	DE
	LD	HL,FCB1
	CALL	_SYS29		;(BDOS)ファイル名の解析
	LD	HL,FCB2
	CALL	_SYS29		;(BDOS)ファイル名の解析
	POP	HL
	LD	BC,05000H
	LD	DE,00081H
SETFCB1:
	LD	A,(HL)
	INC	HL
	CP	020H
	JR	C,SETFCB2
	LD	(DE),A
	INC	DE
	INC	C
	DJNZ	SETFCB1
SETFCB2:
	LD	A,C
	LD	(DTA1),A
	INC	B
	XOR	A
SETFCB3:
	LD	(DE),A
	INC	DE
	DJNZ	SETFCB3
	RET

C_COPY:
	CALL	SETFCB

	LD	DE,ZERO
	CALL	FILEC2
	LD	HL,FCB2
	CALL	S29X1

	LD	A,010H
	LD	(FCB1+13),A
	LD	HL,FCB2+1
	CALL	CWILD1
COPY0:
	CALL	CWILD
	LD	HL,FCB1
	CALL	OPEN
	SCF
COPY1:
	RET	NZ
	CALL	DEFCB

	LD	A,(DTA_CCP+13)
	BIT	4,A
	JR	Z,COPY1A

	LD	HL,FCB1+1
	CALL	CHKWILD
	JR	C,COPY9

	LD	A,020H
	LD	(FCB1+1),A
	LD	HL,(DTA_CCP+26)
	INC	HL
	LD	(FCB1+14),HL
	JR	COPY0

COPY8:
	LD	C,9		;(BDOS)文字列出力
	CALL	SYSTEM
	CALL	LTNL
COPY9:
	CALL	OPEN2
	JR	COPY1

COPY1A:
	LD	HL,FCB2
	LD	DE,FDRV
	LD	BC,DTA_CCP+2
	LDI
	LD	A,11
COPY2:
	PUSH	AF
	LD	A,(HL)
	CP	'?'
	JR	NZ,COPY3
	LD	A,(BC)
COPY3:
	LD	(DE),A
	INC	BC
	INC	DE
	INC	HL
	POP	AF
	DEC	A
	JR	NZ,COPY2
	LD	BC,16-11
	LDIR
PUTNAME:
	LD	HL,FCB1+1
	CALL	CHKWILD
	JR	NC,PUTN1
	LD	HL,FDRV+1
	CALL	FPRNT
	LD	A,020H
	CALL	MSG_A
PUTN1:
	LD	DE,FDRV
	LD	C,016H		;(BDOS)ファイルの作成
	CALL	SYSTEM0
	JR	NZ,COPYE2
	LD	H,A		;A=0
	LD	L,A
	LD	(FDRV+33),HL	;(FCB)ランダム・レコード
	LD	(FDRV+35),HL
	INC	L		;HL=1
	LD	(FDRV+14),HL	;(FCB)レコード・サイズ
COPY6:
	CALL	BUFSIZ
	CALL	S27DTA
	INC	A
	JR	Z,COPYE
	LD	B,A
	LD	A,H
	OR	L
	JR	Z,COPY7
	LD	DE,FDRV
	PUSH	BC
	LD	C,026H		;(BDOS)ランダム・ブロック・ライト
	CALL	SYSTEM
	POP	BC
	OR	A
	JR	NZ,COPYE
	DJNZ	COPY6
COPY7:
	LD	A,(DTA_CCP+13)	;(FCB)属性(アトリビュート)
	LD	(FDRV+13),A	;(FCB)属性(アトリビュート)
	LD	A,(MAJOR_VER)
	CP	2
	JR	NC,COPY7_MSX2	;MSXはFCBの仕様が違う
	LD	HL,DTA_CCP+20
	LD	DE,FDRV+20	;(FCB)更新日時
	LD	BC,4
	LDIR
COPY7_MSX2:
	LD	DE,FDRV
	LD	C,010H		;(BDOS)ファイルのクローズ
	CALL	SYSTEM0
	JR	NZ,COPYE

	LD	DE,OK
	JP	COPY8

COPYE:
	LD	DE,FDRV
	LD	C,013H		;(BDOS)ファイルの削除
	CALL	SYSTEM
COPYE2:
	SCF
	RET

C_TYPE:
	CALL	SETFCB
	LD	HL,FCB1
	CALL	OPEN
	SCF
TYPE1:
	RET	NZ
	CALL	DEFCB
	LD	A,01AH
	CALL	MSG_A
TYPE2:
	CALL	BUFSIZ
	CALL	S27DTA
	ADD	A,0FEH
	RET	C
	LD	A,H
	OR	L
	JR	Z,TYPEE
	LD	BC,DATA
TYPE3:
	LD	A,(BC)
	INC	BC
	CP	01AH
	JR	Z,TYPEE
	LD	E,A
	PUSH	BC
	PUSH	HL
	LD	C,2		;(BDOS)コンソール出力
	CALL	SYSTEM
	POP	HL
	POP	BC
	DEC	HL
	LD	A,H
	OR	L
	JR	NZ,TYPE3
	JR	TYPE2
TYPEE:
	CALL	OPEN2
	JR	TYPE1

CWILD:
	LD	HL,FCB1+1
CWILD1:
	LD	A,(HL)
	CP	020H
	RET	NZ
CWILD2:
	LD	D,H
	LD	E,L
	INC	DE
	LD	BC,10
	LD	(HL),'?'
	LDIR
	RET

BUFSIZ:
	LD	A,(SYSTEM+2)
	SUB	(DATA/256)+1
	AND	0F8H
	LD	H,A
	LD	L,0
	RET

JP_HL:	JP	(HL)

_PRINT:
	PUSH	BC
	PUSH	DE
	PUSH	HL
	LD	C,6
	CALL	SYSTEM
	POP	HL
	POP	DE
	POP	BC
	OR	A
	RET

MSG_A:
	PUSH	AF
	PUSH	BC
	PUSH	DE
	PUSH	HL
	LD	E,A
	LD	C,2
	CALL	SYSTEM
	POP	HL
	POP	DE
	POP	BC
	POP	AF
	RET
;		FILE
FILEC_D2:		;DOS2対応
	LD	A,(MAJOR_VER)
	CP	2
	JR	C,FILEC
	PUSH	BC
	PUSH	DE
	PUSH	HL
	CALL	SPCUT
	LD	HL,PATH_CCP
	LD	B,64
PATHCD1:
	LD	A,(DE)
	INC	DE
	CP	020H
	JR	NC,PATHCD2
	LD	A,0
PATHCD2:
	LD	(HL),A
	JR	C,PATHCD3
	INC	HL
	DJNZ	PATHCD1
PATHCD3:
	POP	HL
	POP	DE
	POP	BC
FILEC:
	CALL	FILE
FILEC2:
	LD	A,(FDRV+1)
	CP	020H
	RET	Z
	JR	SETDIR1

FILE:
	XOR	A
	LD	(FDRV),A
	LD	H,A
	LD	L,A
	LD	(FDRV+14),HL
	CALL	SPCUT
	CALL	CCHK3
	JR	Z,DEVI1
	INC	DE
	LD	A,(DE)
	DEC	DE
	CP	':'
	JR	NZ,DEVI1
	LD	A,(DE)		;DRIVE
	CALL	CAP
	SUB	'@'
	INC	DE
	INC	DE
	LD	(FDRV),A
DEVI1:
	LD	A,(DE)
	SUB	05CH		;\
	JR	NZ,NOROOT
	LD	L,A		;A=0でH=0のはずなのでHL=0
	LD	(FDRV+26),HL
	INC	L
	LD	(FDRV+14),HL
	INC	DE
NOROOT:

SETDIR:
	CALL	FILED
	LD	A,(DE)
	CP	05CH		;\
	RET	NZ
	INC	DE
SETDIR1:
	LD	A,(IS_MSX)
	OR	A
	RET	NZ
				;for LSX-Dodgers
	LD	A,010H		;Directory
	LD	(FDRV+13),A
	PUSH	DE
	LD	DE,FDRV
	LD	C,00FH
	CALL	SYSTEM
	POP	DE
	OR	A
	RET	NZ

	LD	A,(FDRV+13)
	BIT	4,A
	RET	Z

	CALL	FILEI
	LD	HL,(FDRV+26)
	INC	HL
	LD	(FDRV+14),HL
	JR	SETDIR

FILED:
	CALL	FILEI

	LD	B,8
FILE2:
	CALL	CCHKF
	RET	Z
	CP	'*'
	JR	Z,FILE9
	CP	'.'
	JR	Z,FILE4
	LD	(HL),A
	INC	HL
	DJNZ	FILE2

FILE3:
	CALL	CCHKF
	RET	Z
	CP	'.'
	JR	NZ,FILE3

FILE4:
	LD	HL,FNAME+8
	LD	B,3

FILE4L:
	CALL	CCHKF
	RET	Z
	CP	'.'
	JR	NZ,FILE12
	LD	(FNAME),A	;Parent directory(..)
	LD	(FNAME+1),A
	LD	A,020H
FILE12:
	CP	'*'
	JR	Z,FILE10
	LD	(HL),A
	INC	HL
	DJNZ	FILE4L
	RET

FILE9:				;名前の*処理、名前の残りを?で埋める
	CALL	FILE10
	JR	FILE3

FILE10:
	LD	A,'?'

FILL_MEMORY:				;HLからBバイトAで埋める
	LD	(HL),A
	INC	HL
	DJNZ	FILL_MEMORY
	RET

FILEI:				;名前＋拡張子をスペースで初期化
	LD	A,020H
	LD	BC,11*256
	LD	HL,FNAME
	PUSH	HL
	CALL	FILL_MEMORY
	POP	HL
	RET

CCHKF:
	LD	A,(DE)
	CALL	CCHK2
	RET	Z
	JP	FKAN

CCHK2:
	INC	C
	DEC	C
	RET	NZ
CCHK3:				;ZF=1 で使えない文字
	CP	'+'
	RET	Z
	CP	','
	RET	Z
	CP	'/'
	RET	Z
	CP	':'
	RET	Z
	CP	';'
	RET	Z
	CP	'='
	RET	Z
	CP	05CH	;\
	RET	Z
	CP	020H
	RET	NC
	CP	A		;Z=1
	RET

SS1:
	INC	DE
SPCUT:				;スペースをカット
	LD	A,(DE)
	CP	020H
	JR	Z,SS1
	RET

CAP:
	CP	'a'
	RET	C
	CP	'z'+1
	RET	NC
	SUB	020H
	RET
CAP2:
	CALL	CAP
CAP3:
	CALL	CAP4
	CP	021H
	RET	NC
	LD	A,020H
	RET
CAP4:
	CP	5
	RET	NZ
	LD	A,0E5H
	RET

FKANC:
	BIT	0,C
	CALL	Z,CAP2
	JR	FKANX
FKAN:			;漢字チェック
	INC	DE
FKANX:
	BIT	0,C
	RES	0,C
	RET	NZ
	CP	080H
	RET	C
	CP	0A0H
	JR	C,FKAN1
	CP	0E0H
	RET	C
FKAN1:
	INC	C
	AND	A
	RET

CHKWILDX:
	PUSH	IY
	POP	HL
	INC	HL
CHKWILD:
	LD	B,11
	LD	A,'?'
CHKWIL1:
	CP	(HL)
	INC	HL
	SCF
	RET	Z
	DJNZ	CHKWIL1
	XOR	A
	RET

CPNAME:
	PUSH	BC
	PUSH	DE
	LD	DE,CPBUF
	LD	BC,5
	LDIR
	POP	DE
	PUSH	DE
	PUSH	HL
	LD	HL,CPBUF
	CALL	CPFILE
	POP	HL
	POP	DE
	POP	BC
	JR	NZ,CPNAME1
	LD	A,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,A
	RET
CPNAME1:
	INC	HL
	INC	HL
	DJNZ	CPNAME
	SCF
	RET

CPFILE:
	PUSH	BC
	LD	BC,00B00H
CPSTR1:
	LD	A,(DE)
	CP	'?'		;Wild card
	JR	Z,CPSTR2
	LD	A,(HL)
	CALL	FKANC
	PUSH	HL
	LD	H,A
	LD	A,(DE)
	RLC	C
	CALL	FKANC
	RRC	C
	CP	H		;CP (HL),(DE)
	POP	HL
	JR	NZ,CPSTR3
CPSTR2:
	INC	DE
	INC	HL
	DJNZ	CPSTR1
CPSTR3:
	POP	BC
	RET

CPFILE2:
	LD	A,(IY+13)	;(FCB)属性(アトリビュート)
	OR	0E1H
	CPL
	AND	(HL)
	RET

_SYS29:		;(BDOS)ファイル名の解析
	PUSH	BC
	PUSH	HL
	CALL	FILE
	POP	HL
	POP	BC
S29X1:
	PUSH	BC
	PUSH	DE
	PUSH	HL
	EX	DE,HL
	LD	HL,FDRV
	LD	BC,13
	LDIR
	LD	(HL),B		;B=0
	LD	C,3
	LDIR
	POP	HL
	POP	DE
	POP	BC
	XOR	A
	RET
GET_WIDTH:
	LD	A,(IS_MSX)
	OR	A
	JR	Z,NOT_MSX
	LD	A,(LINLEN)
	RET
NOT_MSX:
	PUSH	HL
	LD	HL,(1)
	LD	L,0B1H
	LD	A,(HL)
	POP	HL
	RET

C_MODE:
	LD	A,(IS_MSX)
	OR	A
	RET	Z
	CALL	GETNUM
	LD	A,L
	OR	A
	JR	NZ,MODE1
	LD	A,(LINLEN)
	CALL	PRDEC_A
	JP	LTNL
MODE1:
	CP	33
	JR	C,MODE32
	LD	(LINL40),A
	LD	IX,INITXT
	CALL	CALLROM
	LD	IX,SETTXT
CALLROM:
	LD	IY,(EXPTBL)	;メインROMスロット
	JP	CALSLT
MODE32:
	LD	(LINL32),A
	LD	IX,INIT32
	CALL	CALLROM
	LD	IX,SETT32
	JR	CALLROM

C_PAUSE:
	LD	DE,PAUSE
	LD	C,9		;(BDOS)文字列出力
	CALL	SYSTEM
	LD	C,8		;(BDOS)エコーなしコンソール入力
	CALL	SYSTEM
	JP	LTNL

GETNUM:
	CALL	SPCUT
	LD	HL,0
GETNUM1:
	LD	A,(DE)
	INC	DE
	SUB	'0'
	RET	C
	CP	10
	RET	NC
	LD	C,L
	LD	B,H
	ADD	HL,HL	;*2
	ADD	HL,HL	;*4
	ADD	HL,BC	;*5
	ADD	HL,HL	;*10
	LD	C,A
	LD	B,0
	ADD	HL,BC
	JR	GETNUM1

COMS	EQU	11
COMTB:
	DB	"D    "	;1
	DW	C_DIR
	DB	"DIR  "	;2
	DW	C_DIR
	DB	"COPY "	;3
	DW	C_COPY
	DB	"CD   "	;4
	DW	C_CD
	DB	"DEL  "	;5
	DW	C_DEL
	DB	"PATH "	;6
	DW	C_PATH
	DB	"REN  "	;7
	DW	C_REN
	DB	"TYPE "	;8
	DW	C_TYPE
	DB	"REM  "	;9
	DW	C_REM
	DB	"MODE "	;10
	DW	C_MODE
	DB	"PAUSE"	;11
	DW	C_PAUSE

FREE:	DB	" bytes free  $"
DIRMES:	DB	"   <DIR>$"
OK:	DB	"OK$"
SKIP:	DB	"Skip$"
COMERM:	DB	"Error!$"
PAUSE:	DB	"Strike any key when ready $"

IS_MSX:
	DB	0
MAJOR_VER:
	DB	0

SEARCH_IX:;	EQU	$4000
	DS	64	;DOS2用

PATH_CCP:;	EQU	$5000
	DS	64	;DOS2用

DTA_CCP:;		EQU	$6000
	DS	37
CPBUF:
LEFTX:	DW	0
DTAX:	DW	0
	DB	020H	;CPBUFで使う
	DB	020H
	DB	020H
	DB	020H
	DB	020H
	DB	020H
	DB	020H

DECBF:
	DS	5
FCB_BAT2:
	DB	0
FDRV:
	DB	0
FNAME:
	DS	37
ZERO:
	DB	0
FCB_BAT:
	DW	FCB_BAT2
DATA_COM:
