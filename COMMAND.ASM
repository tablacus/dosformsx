
;	似非COMMAND.COM

	INCLUDE	"DEF.ASM"

PATHX	EQU	64

DATA	EQU	08000H

	ORG	00100H
	JP	START
TITLE:
	DB	00DH,00AH,"pseudo COMMAND v$"
START:
	LD	SP,(SYSTEM+1)
	LD	C,06FH		;(BDOS)MSX-DOS のバージョン番号の獲得
	CALL	SYSTEM
	RET	C
	LD	HL,0011DH
	SBC	HL,BC
	LD	A,B
	LD	(MAJOR_VER),A
	OR	L
	LD	(IS_MSX),A
	OR	A
	JP	Z,WSTART
	LD	HL,08A91H
	SBC	HL,DE
	JR	NZ,NOTABLACUS
	LD	A,1
	LD	(MAJOR_VER),A
NOTABLACUS:
	LD	A,(PROCESS)
	LD	C,61H		;(BDOS)親プロセスに戻る
	LD	B,A
	OR	A
	CALL	NZ,SYSTEM
	XOR	A
	LD	(PROCESS),A

	LD	HL,002BH	;キャラクターセット・日時フォーマット・ビデオ信号の種別
	CALL	RDSLT
	RRCA
	RRCA
	RRCA
	RRCA
	AND	3
	JR	Z,DATEOK
	DEC	A
	LD	HL,V_DATE1
	JR	Z,DATECHG
	DEC	A
	LD	HL,V_DATE2
	JR	NZ,DATEOK
DATECHG:
	LD	DE,V_DATE
	LD	BC,8
	LDIR
DATEOK:
	CALL	INIT_VAR
	LD	A,(TRCFLG)
	OR	A
	JR	Z,WSTART0
	LD	DE,COMERM
	LD	C,9		;(BDOS)文字列出力
	CALL	SYSTEM
	LD	HL,(TRCFLG)
	LD	H,0
	CALL	PRDEC_HL
	XOR	A
	LD	(TRCFLG),A
WSTART0:
	LD	HL,(1)
	LD	L,256-37
	DEC	H
	LD	(FCB_BAT),HL
	LD	A,(DTA1)
	OR	A
	JR	Z,WSTART
	LD	DE,TITLE
	LD	C,9
	CALL	SYSTEM

	LD	HL,VER_BCD
	LD	A,H
	CALL	PRTHX1
	LD	A,'.'
	CALL	MSG_A
	LD	A,L
	CALL	PRTHX
	LD	A,00DH
	CALL	MSG_A
	LD	A,00AH
	CALL	MSG_A

	LD	DE,DTA1+1
	CALL	COMANL
WSTART:
	LD	HL,N_APPEND
	LD	DE,V_APPEND
	LD	C,06CH		;_SENV 環境変数の設定
	CALL	SYSTEM

	LD	HL,N_PROGRAM
	LD	DE,ZERO
	LD	C,06CH		;_SENV 環境変数の設定
	CALL	SYSTEM

	LD	HL,N_PARAMETERS
	LD	DE,ZERO
	LD	C,06CH		;_SENV 環境変数の設定
	CALL	SYSTEM

	XOR	A
	LD	(CSRSW),A

	CALL	LTNL
COMMAND:
	PUSH	HL
	LD	HL,(FCB_BAT)
	LD	A,(HL)
	POP	HL
	OR	A
	JP	NZ,C_BAT1
	CALL	SETDTA1
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	C,019H		;(BDOS)_CURDRV デフォルトドライブの獲得
	CALL	SYSTEM
	POP	HL
	POP	BC
	ADD	A,'A'
	CALL	MSG_A
	LD	E,'>'
	CALL	_PRINT
	POP	DE		;DE=DTA1
	LD	A,80
	LD	(DE),A
	LD	C,0AH		;(BDOS)文字列入力
	CALL	SYSTEM
	CALL	LTNL
COMMAND2:
	LD	DE,DTA1+2
	CALL	COMANL
	JR	NC,COMMAND
	LD	DE,COMERM
	LD	C,9		;(BDOS)文字列出力
	CALL	SYSTEM
	JR	WSTART

COMANL:
	CALL	TOZERO
	LD	(COMST),DE
	CALL	FILE
	PUSH	DE
	LD	DE,FNAME
	LD	A,(DE)
	CP	020H
	JP	Z,SDVSW
	DEC	DE
	LD	A,(DE)
	ADD	A,0FFH
	JR	C,COMB
	INC	DE

	LD	HL,COMTB
	LD	A,COMS
	LD	B,A
	CALL	CPNAME
COMB:
	POP	DE
	JP	NC,JP_HL
COMB2:
	EX	DE,HL
	LD	(COMPAT),HL

	LD	DE,0
COMST	EQU	$-2
	LD	HL,DATA_COM
	LD	(HL),0
COMPR1:
	LD	A,(DE)
	INC	DE
	INC	HL
	LD	(HL),A
	CP	020H
	JR	NC,COMPR1
COMPR2:
	DEC	HL
	LD	A,(HL)
	CP	05CH
	JR	NZ,COMPR3
	LD	(HL),0
	INC	HL
	EX	DE,HL
	CALL	FILE
	LD	HL,N_APPEND
	LD	DE,DATA_COM+1
	LD	C,06CH		;_SENV 環境変数の設定
	CALL	SYSTEM
	JR	COMPR4
COMPR3:
	CP	020H
	JR	NC,COMPR2
COMPR4:
	CALL	CEXE4

	LD	HL,N_PATH
	LD	DE,V_PATH
	LD	B,PATHX
	LD	C,06BH		;_GENV 環境変数の獲得
	CALL	SYSTEM

	LD	HL,V_PATH
	LD	(X_PATH),HL
CEX1:
	LD	HL,(X_PATH)
	LD	A,(HL)
	CP	020H
	RET	C
CEX2:
	LD	A,(HL)
	CP	020H
	JR	C,CEX3
	CP	';'
	JR	Z,CEX3
	INC	HL
	JR	CEX2
CEX3:
	LD	(HL),0
	CP	020H
	JR	C,CEX4
	INC	HL
CEX4:
	LD	DE,(X_PATH)
	LD	(X_PATH),HL
	LD	HL,N_APPEND
	LD	C,06CH		;_SENV 環境変数の設定
	CALL	SYSTEM

	CALL	CEXE4
	JR	CEX1

SDVSW:
	POP	AF
	LD	A,(FDRV)
	DEC	A
	LD	E,A
	LD	C,00EH		;(BDOS)カレントドライブの設定
	JP	SYSTEM0

OPEN_D2:			;DOS2対応
	LD	A,(MAJOR_VER)
	CP	2
	JR	C,OPEN
	LD	DE,PATH_FN1
	JR	OPEN_D2X
OPEN1_D2:			;DOS2対応
	LD	A,(MAJOR_VER)
	CP	2
	JR	C,OPEN1

	LD	DE,PATH_CCP
OPEN_D2X:
	LD	IX,SEARCH_IX
	LD	BC,01040H	;(BDOS)最初のエントリ検索
	CALL	SYSTEM
	PUSH	AF
	LD	DE,PATH_PAR
	LD	C,05EH		;(BDOS)完全なパス文字列の獲得(_WPATH)
	CALL	SYSTEM
	XOR	A
	LD	(HL),A
	LD	DE,PATH_PAR
	SBC	HL,DE
	LD	(PATH_POS),HL
	POP	AF
FIB2DIRENT:
	OR	A
	RET	NZ

	LD	DE,SEARCH_IX+1	;(FIB)ファイル名
	LD	HL,DTA_CCP+1
	LD	C,05CH		;(BDOS)ファイル名の解析
	CALL	SYSTEM

	LD	HL,SEARCH_IX+14	;(FIB)属性
	LD	DE,DTA_CCP+1+8+3
	LDI
	LD	DE,DTA_CCP+1+8+3+1+10
	LD	BC,2+2+2+4	;最終変更時刻+最終変更日付+開始クラスタ+ファイルサイズ
	LDIR
	XOR	A
	RET

OPEN1:
	LD	HL,FDRV
OPEN:
	LD	C,011H		;(BDOS)最初のファイルの検索
OPEN3:
	PUSH	DE
	LD	DE,DTA_CCP
	CALL	SETDTA
	PUSH	BC
	PUSH	HL
	LD	BC,14
	ADD	HL,BC
	LD	(OPEN3_SWC),HL
	POP	HL
	POP	BC
	EX	DE,HL
	CALL	SYSTEM0
	POP	DE
	LD	HL,(0)		;Tablacus Disk ROM Lite　階層ディレクトリ
OPEN3_SWC	EQU	$-2
	LD	(DTA_CCP+14),HL
	RET

OPEN2_D2:			;DOS2対応
	LD	A,(MAJOR_VER)
	CP	2
	JR	C,OPEN2
	LD	IX,SEARCH_IX
	LD	C,41H		;(BDOS)次のエントリ検索
	CALL	SYSTEM
	JR	FIB2DIRENT
OPEN2:
	LD	C,012H
	JR	OPEN3

DEFCB_D2:			;DOS2対応
	LD	A,(MAJOR_VER)
	CP	2
	JR	C,DEFCB
	LD	HL,PATH_PAR
	LD	DE,PATH_CCP
	LD	BC,64
	LDIR
	LD	HL,(PATH_POS)
	LD	DE,PATH_CCP
	ADD	HL,DE
	LD	B,13
	LD	DE,SEARCH_IX+1	;(FIB)ファイル名
DCB4:
	LD	A,(DE)
	OR	A
	JR	Z,DCB5
	INC	DE
	LD	(HL),A
	INC	HL
	JR	DCB4
DCB5:
	LD	(HL),0
	LD	A,(SEARCH_IX+25)	;(FIB)ドライブ番号(1-8)
	ADD	A,040H
	LD	DE,PATH_DRV
	LD	(DE),A
	LD	C,043H		;_OPEN ファイルハンドルのオープン
	LD	A,1		;書き込み禁止
	CALL	SYSTEM
	OR	A
	RET	NZ
	LD	(HANDLE1),BC
	JR	SETDTA100
DEFCB:				;Z=Ok NZ=Error
	LD	DE,DTA_CCP
	CALL	SYSC0F
	OR	A
	RET	NZ

	LD	HL,1
	LD	(DTA_CCP+14),HL
	DEC	L
	LD	(DTA_CCP+33),HL
	LD	(DTA_CCP+35),HL
SETDTA100:
	LD	DE,DATA
SETDTA:
	PUSH	BC
	PUSH	DE
	PUSH	HL
	LD	C,01AH		;(BDOS)DTAの設定
	CALL	SYSTEM
	POP	HL
	POP	DE
	POP	BC
	XOR	A
	RET

SETDTA1:
	LD	DE,DTA1
	JR	SETDTA

SYSC0F:
	LD	C,00FH		;(BDOS)ファイルのオープン
SYSTEM0:
	CALL	SYSTEM
	OR	A
	RET

C_CD:
	CALL	SPCUT
	LD	A,(DE)
	CP	020H
	JP	C,PWD
CD1:
	LD	C,5AH		;(BDOS)_CHDIR カレントディレクトリの変更
	JP	SYSTEM

S27DTA_D2:		;DOS2対応
	LD	A,(MAJOR_VER)
	CP	2
	JR	C,S27DTA
	LD	BC,(HANDLE1)
	LD	DE,DATA
	LD	C,048H		;(BDOS)ファイルハンドルからの読み出し(_READ)
	CALL	SYSTEM0
	RET	Z
	CP	0C7H		;.EOF
	JR	Z,S27EOF
	SCF
	SBC	A,A
	RET
S27EOF:
	LD	A,1
	RET

S27DTA:
	LD	DE,1
	LD	(DTA_CCP+14),DE
	LD	DE,DTA_CCP
S27:
	LD	C,027H		;(BDOS)ランダム・ブロック・リード
	CALL	SYSTEM
	OR	A
	RET

CEXE4:
	LD	HL,FDRV
	LD	DE,DTA_CCP
	LD	BC,1+8
	LDIR
	LD	HL,DTA_CCP+9
	LD	(HL),'C'
	INC	HL
	LD	(HL),'O'
	INC	HL
	LD	(HL),'M'
C_EXE:
	CALL	DEFCB
	JP	NZ,C_BAT
	LD	DE,DATA_COM
	CALL	SETDTA

	LD	HL,(SYSTEM+1)
	LD	DE,DATA_COM
	SBC	HL,DE

	CALL	S27DTA
	DEC	A
	SCF
	RET	NZ
	LD	A,H
	OR	L
	SCF
	RET	Z
	LD	(COMSIZ),HL

	LD	DE,DATA_COM
	CALL	SETDTA
	LD	DE,0
COMPAT	EQU	$-2
	CALL	SETFCB

	LD	HL,N_APPEND
	LD	DE,PATH_CCP
	LD	B,PATHX
	LD	C,06BH		;_GENV 環境変数の獲得
	CALL	SYSTEM
	LD	A,(PATH_CCP)
	OR	A
	JR	NZ,COM_ENV1
	LD	C,019H		;(BDOS)カレントドライブ番号の獲得(_CURDRV)
	CALL	SYSTEM
	ADD	A,'A'
	LD	(PATH_CCP),A
	LD	A,':'
	LD	(PATH_CCP+1),A
	LD	A,05CH		;\
	LD	(PATH_CCP+2),A
	LD	B,A		;ドライブ
	LD	DE,PATH_CCP+2
	LD	C,059H		;(BDOS)GETCD カレントディレクトリの獲得
	CALL	SYSTEM
COM_ENV1:
	LD	DE,DTA_CCP
	LD	HL,DOS2NAME
	CALL	FCB2FNAME
	LD	DE,PATH_CCP
	LD	HL,DOS2NAME+2
COM_ENV2:
	LD	A,(DE)
	OR	A
	JR	Z,COM_ENV3
	INC	DE
	JR	COM_ENV2
COM_ENV3:
	DEC	DE
	LD	A,(DE)
	INC	DE
	CP	05CH
	JR	Z,COM_ENV4
	LD	A,05CH
	LD	(DE),A
	INC	DE
COM_ENV4:
	LD	A,(HL)
	INC	HL
	LD	(DE),A
	INC	DE
	OR	A
	JR	NZ,COM_ENV4

	LD	HL,N_PROGRAM
	LD	DE,PATH_CCP
	LD	C,06CH		;_SENV 環境変数の設定
	CALL	SYSTEM

	LD	HL,N_PARAMETERS
	LD	DE,DTA1+1
	LD	C,06CH		;_SENV 環境変数の設定
	CALL	SYSTEM

	LD	HL,N_APPEND
	LD	DE,V_APPEND
	LD	C,06CH		;_SENV 環境変数の設定
	CALL	SYSTEM

	LD	C,60H		;(BDOS)子プロセスの起動
	CALL	SYSTEM
	OR	A
	JR	NZ,COMP1
	LD	A,B
	LD	(PROCESS),A
COMP1:
	XOR	A
	LD	H,A
	LD	L,A	;HL=0x0000
	LD	(TRCFLG),A
	DI
	LD	SP,(SYSTEM+1)
	PUSH	HL
	LD	HL,0B0EDH	;LDIR
	LD	(000FEH),HL
	LD	HL,DATA_COM
	LD	DE,00100H
	LD	BC,0
COMSIZ	EQU	$-2
	EI
	JP	000FEH

C_BAT:
	LD	HL,DTA_CCP+9
	LD	(HL),'B'
	INC	HL
	LD	(HL),'A'
	INC	HL
	LD	(HL),'T'

	CALL	DEFCB
	RET	NZ

	LD	HL,DTA_CCP
	LD	A,(HL)
	OR	A
	JR	NZ,CBAT_DS
	PUSH	HL
	LD	C,019H		;(BDOS)カレントドライブ番号の獲得(_CURDRV)
	CALL	SYSTEM
	POP	HL
	INC	A
	LD	(HL),A
CBAT_DS:
	LD	DE,(FCB_BAT)
	LD	BC,37
	LDIR
C_BAT1:
	CALL	SETDTA100
	CALL	FGETC_BAT
	LD	HL,DTA1+1
	JR	NZ,END_BATCH
	CP	021H		;スペースや改行など制御文字を飛ばす
	JR	C,C_BAT1
	LD	(HL),' '
	INC	HL
C_BAT2:
	LD	(HL),A
	INC	HL
	LD	A,L
	INC	A		;L==0FFH
	JR	Z,RUN_BATCH
	CALL	FGETC_BAT
	JR	NZ,RUN_BATCH
	CP	020H
	JR	NC,C_BAT2
RUN_BATCH:
	LD	A,L
	SUB	DTA1-1
	LD	(DTA1),A
	CP	4
	JR	C,END_BATCH
	LD	(HL),0
	LD	A,(INTFLG)
	CP	3
	JP	NZ,COMMAND2
END_BATCH:		;バッチファイルを閉じる
	LD	HL,(FCB_BAT)
	LD	(HL),0
	LD	SP,(SYSTEM+1)
	JP	WSTART

FGETC_BAT:
	LD	DE,(FCB_BAT)
FGETC:				;1文字ずつ読み込む
	PUSH	HL		;Z:成功
	LD	HL,1
	CALL	S27
	POP	HL
	LD	A,(DATA)
	RET

C_REM:
	XOR	A
	RET

C_DEL:
	CALL	SETFCB
	LD	C,8		;(BDOS)エコーなしコンソール入力
	CALL	SYSTEM
	LD	B,0
	LD	A,(MAJOR_VER)
	CP	2
	JR	C,CDEL_DOS1

	LD	HL,FCB1
	CALL	OPEN_D2
	SCF
DEL1:
	RET	NZ
	LD	A,(SEARCH_IX+14);	(FIB)属性
	BIT	4,A
	JR	NZ,DEL2

	LD	DE,SEARCH_IX
	LD	C,04DH		;(BDOS)ファイル・サブディレクトリの削除(_DELETE)
	CALL	SYSTEM0
	SCF
	RET	NZ
DEL2:
	CALL	OPEN2_D2
	JR	DEL1

CDEL_DOS1:
	LD	C,013H
	JR	CDEL1		;(BDOS)ファイルの削除

C_REN:
	LD	A,(MAJOR_VER)
	CP	2
	JR	NC,REN_DOS2
	CALL	SETFCB
	LD	A,010H		;ディレクトリも対象にする(LSX-Dodgers)
	LD	(FCB1+13),A	;属性
	LD	C,017H		;(BDOS)ファイル名の変更
CDEL1:
	LD	DE,FCB1
REN2:
	CALL	SYSTEM
	ADD	A,0FFH
	RET

REN_DOS2:			;DOS2のリネーム(ディレクトリ対応)
	CALL	SPCUT
	LD	L,E
	LD	H,D
REN_D2_1:
	LD	A,(HL)
	CP	020H+1
	JR	C,REN_D2_2
	INC	HL
	JR	REN_D2_1
REN_D2_2:
	LD	(HL),0
	INC	HL
	LD	C,04EH		;(BDOS)ファイルあるいはサブディレクトリ名の変更(_RENAME)
	JR	REN2

C_DIR:
	CALL	FILEC_D2
	LD	HL,FDRV+1
	CALL	CWILD1
	LD	A,0F1H
	LD	(FDRV+13),A
	CALL	OPEN1_D2
CDIR1:
	OR	A
	JR	NZ,PDSKF
	CALL	P_NAME
	CALL	OPEN2_D2
	JR	CDIR1

PDSKF:
	LD	A,(FDRV)
	LD	E,A
	LD	C,01BH		;(BDOS)ディスク情報の獲得
	CALL	SYSTEM
	LD	C,A		;C←1クラスタ辺りの論理セクタ数
	ADD	A,001H
	RET	C		;Aが0FFHだった場合
	LD	A,8-2
PDS1:				;HL=未使用クラスタの総数
	INC	A
	RR	C
	JR	NC,PDS1
PDS2:				;B←論理セクタのサイズの上位8ビット
	INC	A
	RR	B
	JR	NC,PDS2
	LD	B,A

	LD	DE,0
PDS3:
	ADD	HL,HL
	EX	DE,HL
	ADC	HL,HL
	EX	DE,HL
	DJNZ	PDS3
PDSKF1:
	CALL	PRDEC_DEHL
	LD	DE,FREE
	LD	C,9		;(BDOS)文字列出力
	CALL	SYSTEM
PWD:
	CALL	PUTDRV
	LD	A,05CH		;\
	CALL	MSG_A
PDSKF2:				;MSX-DOS2
	LD	DE,DATA
	XOR	A
	LD	(DE),A
	LD	A,(FDRV)
	LD	B,A		;ドライブ
	LD	C,059H		;(BDOS)GETCD カレントディレクトリの獲得
	CALL	SYSTEM
	LD	HL,DATA

	CALL	MSX
	JR	LTNL

MSX1:
	CALL	MSG_A
MSX:
	LD	A,(HL)
	INC	HL
	OR	A
	JR	NZ,MSX1
	RET

MSXSLT1:
	CALL	MSG_A
MSXSLT:
	PUSH	BC
	PUSH	HL
	LD	A,B
	CALL	RDSLT
	POP	HL
	POP	BC
	INC	HL
	OR	A
	JR	NZ,MSXSLT1
	RET

P_NAME:
	LD	HL,DTA_CCP+1
	LD	A,(HL)
	CP	'.'
	RET	Z
	CALL	FPRNT
	LD	A,(DTA_CCP+12)
	BIT	4,A
	JR	Z,DIR3
	LD	DE,DIRMES
	LD	C,9		;(BDOS)文字列出力
	CALL	SYSTEM
	JR	DIR6
DIR3:
	LD	DE,(DTA_CCP+1+01EH)
	LD	HL,(DTA_CCP+1+01CH)
	CALL	PRDEC_DEHL
DIR6:
	CALL	PRTTMS

LTNL:
	LD	E,00DH
	CALL	_PRINT
	LD	E,00AH
	JP	_PRINT

C_PATH:
	CALL	SPCUT
	CP	021H
	JR	NC,CPATH0

	LD	HL,N_PATH
	LD	DE,V_PATH
	LD	B,PATHX
	LD	C,06BH		;_GENV 環境変数の獲得
	CALL	SYSTEM
	LD	HL,V_PATH
CPATHP:
	LD	A,(HL)
	INC	HL
	CP	020H
	CCF
	JR	NC,LTNL
	CALL	MSG_A
	JR	CPATHP
CPATH0:
	LD	HL,V_PATH
	CP	';'
	JR	NZ,CPATH1
	INC	DE
CPATH1:
	EX	DE,HL
	LD	BC,PATHX
	LDIR

	LD	HL,N_PATH
	LD	DE,V_PATH
	LD	C,06CH		;_SENV 環境変数の設定
	JP	SYSTEM

PUTDRV:
	LD	A,(FDRV)
	OR	A
	JR	NZ,PUTDRV1
	PUSH	BC
	PUSH	DE
	PUSH	HL
	LD	C,019H
	CALL	SYSTEM
	POP	HL
	POP	DE
	POP	BC
	INC	A
PUTDRV1:
	ADD	A,'A'-1
	CALL	MSG_A
	LD	A,':'
MSG_AR:
	JP	MSG_A

PRDEC_HL:
	XOR	A
PRDEC_AHL:
	LD	E,A
	LD	D,0
PRDEC_DEHL:
	LD	A,2
	LD	(DEC6+1),A
	XOR	A
	PUSH	HL
	LD	HL,DECBF
	LD	B,5
	CALL	FILL_MEMORY
	POP	HL

	LD	C,32
DEC1:
	ADD	HL,HL
	EX	DE,HL
	ADC	HL,HL
	EX	DE,HL
	PUSH	HL
	LD	HL,DECBF+4
	LD	B,5
DEC2:
	LD	A,(HL)
	ADC	A,A
	DAA
	LD	(HL),A
	DEC	HL
	DJNZ	DEC2
	POP	HL
	DEC	C
	JR	NZ,DEC1

	LD	HL,DECBF
	LD	A,020H
	LD	B,4
DEC3:
	CALL	DEC4
	CALL	DEC4
	INC	HL
	DJNZ	DEC3
DECX:
	CALL	DEC4
	XOR	A
DEC4:
	RLD
	CP	020H
	JR	Z,DEC6
	OR	030H
DEC5:
	JR	MSG_AR
DEC7:
	LD	A,020H
	JR	MSG_AR
DEC6:
	LD	A,2
	OR	A
	JR	Z,DEC7
	DEC	A
	LD	(DEC6+1),A
	LD	A,020H
	RET

FPRNT:
	LD	B,8
	CALL	P_N1
	LD	A,(HL)
	CP	020H
	JR	Z,FPR1
	LD	A,'.'
FPR1:
	CALL	MSG_A
	LD	B,3

P_N1:
	LD	A,(HL)
	CALL	CAP3
	CALL	MSG_A
	INC	HL
	DJNZ	P_N1
	RET

PRTTMS:
	LD	A,020H
	CALL	MSG_A

	LD	HL,(DTA_CCP+1+24)
	LD	A,L
	OR	A
	RET	Z
	SRL	H
	RLA
	RLA
	RLA
	RLA
	AND	00FH
	LD	D,A
	LD	IX,V_DATE
PRTTMS1:
	LD	A,(IX+0)
	OR	A
	JR	Z,PRTTMS2
	CALL	PR_DATE
	CALL	PR_DATE_SPLITER
	JR	PRTTMS1
PRTTMS2:

	CALL	GET_WIDTH
	CP	32+1
	JR	NC,SHOW_TIME
	LD	A,01DH
	JP	MSG_A
SHOW_TIME:
	LD	HL,(DTA_CCP+1+22)

	LD	A,020H
	CALL	MSG_A
	LD	A,H
	LD	H,L
	RRA
	RR	L
	RRA
	RR	L
	RRA
	RR	L
	AND	01FH
	LD	C,A
	LD	A,(V_TIME)
	CP	'1'
	LD	A,C
	JR	NZ,TIME24
	CP	12
	JR	C,TIME12
	SUB	12
TIME12:
	OR	A
	JR	NZ,TIME24
	ADD	A,12
TIME24:
	PUSH	BC
	CALL	PRDEC_A
	LD	A,':'
	CALL	MSG_A
	LD	A,L
	RRCA
	RRCA
	AND	03FH
	CALL	PRDEC_A

	LD	A,':'
	CALL	MSG_A
	LD	A,H
	AND	01FH
	ADD	A,A
	CALL	PRDEC_A

	LD	A,(V_TIME)
	CP	'1'
	POP	BC
	RET	NZ
	LD	A,C
	LD	E,'a'
	CP	12
	JP	C,_PRINT
	LD	E,'p'
	JP	_PRINT

;	PRINT10

PRDEC_A:
	PUSH	HL
	LD	B,8
	LD	C,A
	XOR	A
PRTA1:
	RLC	C
	ADC	A,A
	DAA
	DJNZ	PRTA1
	LD	HL,DECBF
	LD	(HL),A
	XOR	A
	CALL	DECX
	POP	HL
	RET

PR_DATE:
	LD	A,(IX+0)
	CP	020H
	RET	C
	CALL	CAP
	CP	'D'
	JR	Z,PR_DAY
	CP	'M'
	JR	Z,PR_MONTH
	CP	'Y'
	JR	NZ,PR_DATE1
	LD	C,A
	LD	A,(IX+2)
	CALL	CAP
	CP	C
	JR	NZ,YEAR2
	LD	A,H		;YEAR
	ADD	A,80+256-100
	LD	A,19
	ADC	A,0
	CALL	PRDEC_A		;年4桁
YEAR2:
	LD	A,H		;YEAR
	ADD	A,80
	CALL	PRDEC_A
	JR	PR_DATE1
PR_MONTH:
	LD	C,A
	LD	A,(IX+2)
	CALL	CAP
	CP	C
	JR	NZ,MONTH2
	PUSH	HL		;月を文字列で表示 Jan等
	PUSH	DE
	LD	A,D
	DEC	A
	ADD	A,A
	ADD	A,A
	LD	HL,S_MONTH
	LD	D,0
	LD	E,A
	ADD	HL,DE
	CALL	MSX
	POP	DE
	POP	HL
	JR	PR_DATE1
MONTH2:
	LD	A,D		;月を数字で表示
	CALL	PRDEC_A
	JR	PR_DATE1
PR_DAY:
	LD	A,L
	AND	01FH
	CALL	PRDEC_A
PR_DATE1:
	INC	IX
	LD	A,(IX+0)
	CALL	CAP
	CP	'A'
	RET	C
	CP	'Z'+1
	JR	C,PR_DATE1
	RET
PR_DATE_SPLITER:
	LD	A,(IX+0)
	CP	020H
	RET	C
	INC	IX
	JP	MSG_A

SETFCB:
	CALL	SPCUT
	LD	A,(DE)
	CP	020H
	JR	C,SETFCBA
	DEC	DE
SETFCBA:
	PUSH	DE
	LD	HL,FCB1
	LD	DE,FCB1+1
	LD	BC,00023H
	LD	(HL),B		;B=0
	LDIR
	POP	DE
	PUSH	DE
	LD	HL,FCB1
	LD	IX,PATH_FN1
	CALL	_SYS29		;ファイル名の解析
	LD	HL,FCB2
	LD	IX,PATH_FN2
	CALL	_SYS29		;ファイル名の解析
	POP	HL
	LD	BC,05000H
	LD	DE,00081H
SETFCB1:
	LD	A,(HL)
	INC	HL
	CP	020H
	JR	C,SETFCB2
	LD	(DE),A
	INC	DE
	INC	C
	DJNZ	SETFCB1
SETFCB2:
	LD	A,C
	LD	(DTA1),A
	INC	B
	XOR	A
SETFCB3:
	LD	(DE),A
	INC	DE
	DJNZ	SETFCB3
	RET

C_COPY:
	CALL	SETFCB
	LD	A,(MAJOR_VER)
	CP	2
	JR	C,COPYI0
	CALL	IS_FOLDER_FN2
	JR	C,COPYI0
	LD	HL,FDRV+1
	LD	B,8+3
	CALL	FILE10
COPYI0:
	LD	A,(FDRV)
	LD	B,A
	OR	A
	JR	NZ,COPYI1
	PUSH	BC
	LD	C,019H		;(BDOS)_CURDRV デフォルトドライブの獲得
	CALL	SYSTEM
	INC	A
	LD	(FDRV),A
	POP	BC
COPYI1:
	ADD	A,040H
	LD	(CUR_DRV),A
	LD	DE,CUR_PATH
	LD	C,059H		;(BDOS)カレントディレクトリの獲得(_GETCD)
	CALL	SYSTEM
	CALL	COPYSUB
RES_CUR_PATH:
	LD	DE,CUR_DRV
SET_CUR_PATH:
	PUSH	AF
	LD	A,(FDRV)
	LD	B,A
	LD	C,05AH		;(BDOS)カレントディレクトリの変更(_CHDIR)
	CALL	SYSTEM
	POP	AF
	RET
COPYSUB:
	LD	DE,ZERO
	CALL	FILEC2
	LD	HL,FCB2
	CALL	S29X1

	LD	A,010H
	LD	(FCB1+13),A
	LD	HL,FCB2+1
	CALL	CWILD1
COPY0:
	CALL	CWILD
	LD	HL,FCB1
	CALL	OPEN_D2
	SCF
COPY1:
	RET	NZ
	CALL	DEFCB_D2

	LD	A,(DTA_CCP+12)
	BIT	4,A
	JR	Z,COPY1A

	LD	HL,FCB1+1
	CALL	CHKWILD
	JR	C,COPY9

	LD	A,020H
	LD	(FCB1+1),A
	LD	HL,(DTA_CCP+26)
	INC	HL
	LD	(FCB1+14),HL
	JR	COPY0

COPY8:
	CALL	SHOW_OK
COPY9:
	CALL	RES_CUR_PATH
	CALL	OPEN2_D2
	JR	COPY1

COPY1A:
	LD	HL,FCB2
	LD	DE,FDRV
	LD	BC,DTA_CCP+2
	LDI
	LD	A,11
COPY2:
	PUSH	AF
	LD	A,(HL)
	CP	'?'
	JR	NZ,COPY3
	LD	A,(BC)
COPY3:
	LD	(DE),A
	INC	BC
	INC	DE
	INC	HL
	POP	AF
	DEC	A
	JR	NZ,COPY2
	LD	BC,16-11
	LDIR
PUTNAME:
	LD	HL,FCB1+1
	CALL	CHKWILD
	JR	NC,PUTN1
	LD	HL,FDRV+1
	CALL	FPRNT
	LD	A,020H
	CALL	MSG_A
PUTN1:
	LD	DE,PATH_FN2
	CALL	SET_CUR_PATH

	LD	DE,FDRV
	LD	C,016H		;(BDOS)ファイルの作成
	CALL	SYSTEM0
	JP	NZ,COPYE2
	LD	H,A		;A=0
	LD	L,A
	LD	(FDRV+33),HL	;(FCB)ランダム・レコード
	LD	(FDRV+35),HL
	INC	L		;HL=1
	LD	(FDRV+14),HL	;(FCB)レコード・サイズ
COPY6:
	CALL	BUFSIZ
	CALL	S27DTA_D2
	LD	B,A
	INC	A
	JP	Z,COPYE
	LD	A,H
	OR	L
	JR	Z,COPY7
	LD	DE,FDRV
	PUSH	BC
	LD	C,026H		;(BDOS)ランダム・ブロック・ライト
	CALL	SYSTEM
	POP	BC
	OR	A
	JR	NZ,COPYE
	DJNZ	COPY6
COPY7:
	LD	A,(MAJOR_VER)
	CP	2
	JR	NC,COPY7_MSX2	;DOS2はFCBの仕様が違う
	LD	A,(DTA_CCP+13)	;(FCB)属性(アトリビュート)
	LD	(FDRV+13),A	;(FCB)属性(アトリビュート)
	LD	HL,DTA_CCP+20
	LD	DE,FDRV+20	;(FCB)更新日時
	LD	BC,4
	LDIR
COPY7_MSX2:
	LD	DE,FDRV
	LD	C,010H		;(BDOS)ファイルのクローズ
	CALL	SYSTEM0

	JR	NZ,COPYE
	LD	A,(MAJOR_VER)
	CP	2
	JR	C,COPY_DOS2DT

	LD	BC,(HANDLE1)
	LD	C,045H		;(BDOS)ファイルハンドルのクローズ(_CLOSE)
	CALL	SYSTEM

	LD	DE,PATH_FN2
	CALL	SET_CUR_PATH

	LD	DE,FDRV
	LD	HL,DOS2NAME
	CALL	FCB2FNAME

	LD	A,(SEARCH_IX+14);	(FIB)属性
	LD	L,A
	LD	DE,DOS2NAME
	LD	A,1
	LD	C,050H		;(BDOS)_ATTR ファイル属性の獲得・設定
	CALL	SYSTEM0

	LD	IX,(SEARCH_IX+15)	;(FIB)更新時間
	LD	HL,(SEARCH_IX+17)	;(FIB)更新日
	LD	DE,DOS2NAME
	LD	A,1
	LD	C,51H		;(BDOS)_FTIME ファイルの日付および時刻の獲得・設定
	CALL	SYSTEM0
COPY_DOS2DT:
	JP	COPY8

COPYE:
	LD	BC,(HANDLE1)
	LD	C,045H		;(BDOS)ファイルハンドルのクローズ(_CLOSE)
	CALL	SYSTEM
	LD	DE,FDRV
	LD	C,013H		;(BDOS)ファイルの削除
	CALL	SYSTEM
COPYE2:
	SCF
	RET

FCB2FNAME:
	LD	A,(DE)
	INC	DE
	ADD	A,040H
	LD	(HL),A
	INC	HL
	LD	(HL),':'
	INC	HL

	LD	B,8
FCB2FNAME1:
	LD	A,(DE)
	CP	020H+1
	JR	C,FCB2FNAME2
	INC	DE
	LD	(HL),A
	INC	HL
	DJNZ	FCB2FNAME1
	JR	FCB2FNAME3
FCB2FNAME2:
	INC	DE
	DJNZ	FCB2FNAME2
FCB2FNAME3:
	LD	A,(DE)
	CP	020H+1
	JR	C,FCB2FNAME5
	LD	(HL),'.'
	INC	HL
	LD	B,3
FCB2FNAME4:
	LD	A,(DE)
	INC	DE
	CP	020H+1
	JR	C,FCB2FNAME5
	LD	(HL),A
	INC	HL
	DJNZ	FCB2FNAME4
FCB2FNAME5:
	LD	(HL),0
	RET

C_TYPE:
	CALL	SETFCB
	LD	HL,FCB1
	CALL	OPEN_D2
	SCF
	RET	NZ
	CALL	TYPE1
	XOR	A
	RET
TYPE1:
	RET	NZ
	CALL	DEFCB_D2
	LD	A,01AH
	CALL	MSG_A
TYPE2:
	CALL	BUFSIZ
	CALL	S27DTA_D2
	ADD	A,0FEH
	RET	C
	LD	A,H
	OR	L
	JR	Z,TYPEE
	LD	BC,DATA
TYPE3:
	LD	A,(BC)
	INC	BC
	CP	01AH
	JR	Z,TYPEE
	LD	E,A
	PUSH	BC
	PUSH	HL
	LD	C,2		;(BDOS)コンソール出力
	CALL	SYSTEM
	POP	HL
	POP	BC
	DEC	HL
	LD	A,H
	OR	L
	JR	NZ,TYPE3
	JR	TYPE2
TYPEE:
	LD	A,(MAJOR_VER)	;DOS2対応
	CP	2
	JR	C,TYPEE2
	LD	BC,(HANDLE1)
	LD	C,045H		;(BDOS)ファイルハンドルのクローズ(_CLOSE)
TYPEE2:
	CALL	OPEN2_D2
	AND	A
	JR	TYPE1

CWILD:
	LD	HL,FCB1+1
CWILD1:
	LD	A,(HL)
	CP	020H
	RET	NZ
CWILD2:
	LD	D,H
	LD	E,L
	INC	DE
	LD	BC,10
	LD	(HL),'?'
	LDIR
	RET

BUFSIZ:
	LD	A,(SYSTEM+2)
	SUB	(DATA/256)+1
	AND	0F8H
	LD	H,A
	LD	L,0
	RET

JP_HL:	JP	(HL)

_PRINT:
	PUSH	BC
	PUSH	DE
	PUSH	HL
	PUSH	IX
	LD	C,6
	CALL	SYSTEM
	POP	IX
	POP	HL
	POP	DE
	POP	BC
	OR	A
	RET

PRTHX:
	PUSH	AF
	RLCA
	RLCA
	RLCA
	RLCA
	CALL	PRTHX1
	POP	AF
PRTHX1:
	CALL	ASC
MSG_A:
	PUSH	AF
	PUSH	BC
	PUSH	DE
	PUSH	HL
	PUSH	IX
	LD	E,A
	LD	C,2
	CALL	SYSTEM
	POP	IX
	POP	HL
	POP	DE
	POP	BC
	POP	AF
	RET

ASC:
	AND	00FH
	OR	'0'
	CP	'9'
	RET	C
	ADD	A,7
	RET
;		FILE
FILEC_D2:		;DOS2対応
	LD	A,(MAJOR_VER)
	CP	2
	JR	C,FILEC
	PUSH	BC
	PUSH	DE
	PUSH	HL
	CALL	SPCUT
	LD	HL,PATH_CCP
	LD	B,64
PATHCD1:
	LD	A,(DE)
	INC	DE
	CP	020H
	JR	NC,PATHCD2
	LD	A,0
PATHCD2:
	LD	(HL),A
	JR	C,PATHCD3
	INC	HL
	DJNZ	PATHCD1
PATHCD3:
	POP	HL
	POP	DE
	POP	BC
FILEC:
	CALL	FILE
FILEC2:
	LD	A,(FDRV+1)
	CP	020H
	RET	Z
	JR	SETDIR1

FILE:
	LD	A,(MAJOR_VER)	;Tablacus Disk ROM Lite
	CP	1
	JR	Z,FILE_TDRL
FILEX:
	XOR	A
	LD	(FDRV),A
	LD	H,A
	LD	L,A
	LD	(FDRV+14),HL
	CALL	SPCUT
	CALL	CCHK3
	JR	Z,DEVI1
	INC	DE
	LD	A,(DE)
	DEC	DE
	CP	':'
	JR	NZ,DEVI1
	LD	A,(DE)		;DRIVE
	CALL	CAP
	SUB	'@'
	INC	DE
	INC	DE
	LD	(FDRV),A
DEVI1:
	LD	A,(DE)
	SUB	05CH		;\
	JR	NZ,NOROOT
	LD	L,A		;A=0でH=0のはずなのでHL=0
	LD	(FDRV+26),HL
	INC	L
	LD	(FDRV+14),HL
	INC	DE
NOROOT:

SETDIR:
	CALL	FILED
	LD	A,(DE)
	CP	05CH		;\
	RET	NZ
	INC	DE
SETDIR1:
	RET

FILE_TDRL:
	LD	HL,FDRV
	LD	C,029H		;(BDOS) パス名の解析
	JP	SYSTEM

FILED:
	CALL	FILEI

	LD	B,8
FILE2:
	CALL	CCHKF
	RET	Z
	CP	'*'
	JR	Z,FILE9
	CP	'.'
	JR	Z,FILE4
	LD	(HL),A
	INC	HL
	DJNZ	FILE2

FILE3:
	CALL	CCHKF
	RET	Z
	CP	'.'
	JR	NZ,FILE3

FILE4:
	LD	HL,FNAME+8
	LD	B,3

FILE4L:
	CALL	CCHKF
	RET	Z
	CP	'.'
	JR	NZ,FILE12
	LD	(FNAME),A	;Parent directory(..)
	LD	(FNAME+1),A
	LD	A,020H
FILE12:
	CP	'*'
	JR	Z,FILE10
	LD	(HL),A
	INC	HL
	DJNZ	FILE4L
	RET

FILE9:				;名前の*処理、名前の残りを?で埋める
	CALL	FILE10
	JR	FILE3

FILE10:
	LD	A,'?'

FILL_MEMORY:				;HLからBバイトAで埋める
	LD	(HL),A
	INC	HL
	DJNZ	FILL_MEMORY
	RET

FILEI:				;名前＋拡張子をスペースで初期化
	LD	A,020H
	LD	BC,11*256
	LD	HL,FNAME
	PUSH	HL
	CALL	FILL_MEMORY
	POP	HL
	RET

CCHKF:
	LD	A,(DE)
	CALL	CCHK2
	RET	Z
	JP	FKAN

CCHK2:
	INC	C
	DEC	C
	RET	NZ
CCHK3:				;ZF=1 で使えない文字
	CP	'+'
	RET	Z
	CP	','
	RET	Z
	CP	'/'
	RET	Z
	CP	':'
	RET	Z
	CP	';'
	RET	Z
	CP	'='
	RET	Z
	CP	05CH	;\
	RET	Z
	CP	020H
	RET	NC
	CP	A		;Z=1
	RET

SS1:
	INC	DE
SPCUT:				;スペースをカット
	LD	A,(DE)
	CP	020H
	JR	Z,SS1
	RET

TOZERO:
	PUSH	DE
TZ1:
	LD	A,(DE)
	CP	20H
	JR	C,TZ2
	INC	DE
	JR	TZ1
TZ2:
	XOR	A
	LD	(DE),A
	POP	DE
	RET

CAP:
	CP	'a'
	RET	C
	CP	'z'+1
	RET	NC
	SUB	020H
	RET
CAP2:
	CALL	CAP
CAP3:
	CALL	CAP4
	CP	021H
	RET	NC
	LD	A,020H
	RET
CAP4:
	CP	5
	RET	NZ
	LD	A,0E5H
	RET

FKANC:
	BIT	0,C
	CALL	Z,CAP2
	JR	FKANX
FKAN:			;漢字チェック
	INC	DE
FKANX:
	BIT	0,C
	RES	0,C
	RET	NZ
	CP	080H
	RET	C
	CP	0A0H
	JR	C,FKAN1
	CP	0E0H
	RET	C
FKAN1:
	INC	C
	AND	A
	RET

CHKWILDX:
	PUSH	IY
	POP	HL
	INC	HL
CHKWILD:
	LD	B,11
	LD	A,'?'
CHKWIL1:
	CP	(HL)
	INC	HL
	SCF
	RET	Z
	DJNZ	CHKWIL1
	XOR	A
	RET

CPNAME:
	PUSH	BC
	PUSH	DE
	LD	DE,CPBUF
	LD	BC,7
	LDIR
	POP	DE
	PUSH	DE
	PUSH	HL
	LD	HL,CPBUF
	CALL	CPFILE
	POP	HL
	POP	DE
	POP	BC
	JR	NZ,CPNAME1
	LD	A,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,A
	RET
CPNAME1:
	INC	HL
	INC	HL
	DJNZ	CPNAME
	SCF
	RET

CPFILE:
	PUSH	BC
	LD	BC,00B00H
CPSTR1:
	LD	A,(DE)
	CP	'?'		;Wild card
	JR	Z,CPSTR2
	LD	A,(HL)
	CALL	FKANC
	PUSH	HL
	LD	H,A
	LD	A,(DE)
	RLC	C
	CALL	FKANC
	RRC	C
	CP	H		;CP (HL),(DE)
	POP	HL
	JR	NZ,CPSTR3
CPSTR2:
	INC	DE
	INC	HL
	DJNZ	CPSTR1
CPSTR3:
	POP	BC
	RET

CPFILE2:
	LD	A,(IY+13)	;(FCB)属性(アトリビュート)
	OR	0E1H
	CPL
	AND	(HL)
	RET

_SYS29:		;(BDOS)ファイル名の解析
	PUSH	BC
	PUSH	DE
	LD	B,64
	CALL	SPCUT
	LD	(DIR_CK),IX
D2FN1:
	LD	A,(DE)
	CP	020H+1
	JR	C,D2FN2
	INC	DE
	LD	(IX+0),A
	INC	IX
	DJNZ	D2FN1
D2FN2:
	LD	(IX+0),0
	LD	A,(IX-1)
	CP	05CH		;\
	JR	NZ,D2FN3
	LD	A,(IX-2)
	CP	':'
	JR	Z,D2FN3

	LD	(IX-1),0
	LD	DE,(DIR_CK)
	CALL	IS_FOLDER
	JR	C,D2FN3
D2FN4:
	LD	(IX-1),05CH	;\
D2FN3:
	POP	DE
	POP	BC
	PUSH	BC
	PUSH	HL
	CALL	FILE
	POP	HL
	POP	BC
S29X1:
	PUSH	BC
	PUSH	DE
	PUSH	HL
	EX	DE,HL
	LD	HL,FDRV
	LD	BC,13
	LDIR
	LD	(HL),B		;B=0
	LD	C,3
	LDIR
	POP	HL
	POP	DE
	POP	BC
	XOR	A
	RET
GET_WIDTH:
	LD	A,(IS_MSX)
	OR	A
	JR	Z,NOT_MSX
	LD	A,(LINLEN)
	RET
NOT_MSX:
	PUSH	HL
	LD	HL,(1)
	LD	L,0B1H
	LD	A,(HL)
	POP	HL
	RET

IS_FOLDER_FN2:
	LD	DE,PATH_FN2
	CALL	IS_FOLDER2
	RET	C

	LD	DE,0
	LD	(PATH_FN2_SL),DE
	LD	DE,PATH_FN2
IF2_1:
	LD	A,(DE)
	INC	DE
	CP	'\\'
	JR	NZ,IF2_2
	LD	(PATH_FN2_SL),DE
IF2_2:
	OR	A
	JR	NZ,IF2_1
	LD	DE,(PATH_FN2_SL)
	LD	A,D
	OR	E
	JR	Z,IS_FOLDER_FN2_E
	XOR	A
	DEC	DE
	LD	(DE),A

	LD	DE,PATH_FN2
	CALL	IS_FOLDER
	JR	NC,IS2_3
	LD	A,'\\'
	DEC	DE
	LD	(DE),A
IS_FOLDER_FN2_E:
	LD	DE,PATH_FN2
	SCF
	RET
IS2_3:
	LD	DE,(PATH_FN2_SL)
	LD	HL,FCB2
	CALL	_SYS29
	SCF
	RET

IS_FOLDER:			;out CF=0:Folder
	CALL	SPCUT
	LD	A,(DE)
	ADD	A,0FFH
	RET	NC
	XOR	A
	LD	C,050H		;(BDOS)_ATTR ファイル属性の獲得・設定
	PUSH	DE
	CALL	SYSTEM0
	POP	DE
	SCF
	RET	NZ
	LD	A,L
	AND	010H
	SUB	1
	RET

IS_FOLDER2:			;out CF=0:Folder
	CALL	SPCUT
	LD	A,(DE)
	ADD	A,0FFH
	RET	NC
	XOR	A
	LD	C,050H		;(BDOS)_ATTR ファイル属性の獲得・設定
	PUSH	DE
	CALL	SYSTEM0
	POP	DE
	RET	NZ
	LD	A,L
	AND	010H
	SUB	1
	RET

C_MODE:
	LD	A,(IS_MSX)
	OR	A
	RET	Z
	LD	C,41
	LD	A,(EXBRSA)
	OR	A
	JR	Z,MODE_MSX1
	LD	C,81
MODE_MSX1:
	PUSH	BC
	CALL	GETNUM
	POP	BC
	LD	A,L
	CP	C
	JR	NC,MODE1
	OR	A
	JR	Z,MODE1
	CP	33
	JR	C,MODE32
	LD	(LINL40),A
	LD	IX,INITXT
	CALL	CALLROM
	LD	IX,SETTXT
CALLROM:
	LD	IY,(EXPTBL)	;メインROMスロット
	JP	CALSLT
MODE1:
	LD	A,(LINLEN)
	CALL	PRDEC_A
	JP	LTNL
MODE32:
	LD	(LINL32),A
	LD	IX,INIT32
	CALL	CALLROM
	LD	IX,SETT32
	JR	CALLROM

C_PAUSE:
	CALL	SPCUT
	EX	DE,HL
	LD	A,(HL)
	OR	A
	JR	NZ,C_PAUSE1
	LD	HL,PAUSE
C_PAUSE1:
	CALL	MSX
	LD	C,7		;(BDOS)コンソール直接入力(_DIRIN)
	CALL	SYSTEM
	CP	3
	JP	Z,END_BATCH
	JP	LTNL

C_ECHO:
	CALL	SPCUT
	EX	DE,HL
	CALL	MSX
	JP	LTNL

C_MKDIR:
	CALL	SPCUT
	LD	BC,09044H	;B=新規作成+ディレクトリ/C=(BDOS)ファイルハンドルの作成(_CREATE)
	CALL	SYSTEM
	ADD	A,0FFH
	RET	C
	LD	C,045H		;(BDOS)ファイルハンドルのクローズ(_CLOSE)
	CALL	SYSTEM
SHOW_OK:
	LD	DE,OK
	LD	C,9		;(BDOS)文字列出力
	CALL	SYSTEM
	JP	LTNL

C_RMDIR:
	CALL	IS_FOLDER
	RET	C
	LD	C,04DH		;(BDOS)ファイル・サブディレクトリの削除
	CALL	SYSTEM
	ADD	A,0FFH
	RET	C
	JR	SHOW_OK

C_SET:
	CALL	SPCUT
	LD	(CSET_PARAM),DE
CSET2:
	LD	A,(DE)
	CP	020H
	JR	C,CSET_LIST
	SUB	'='
	JR	Z,CSET_SET
	INC	DE
	JR	CSET2
CSET_SET:
	LD	(DE),A
	INC	DE
CSET_PARAM	EQU	$+1
	LD	HL,0
	LD	C,06CH		;_SENV 環境変数の設定
	CALL	SYSTEM
INIT_VAR:			;環境変数の初期化
	LD	HL,N_DATE
	LD	DE,V_DATE
	LD	B,16
	LD	C,06BH		;_GENV 環境変数の獲得
	CALL	SYSTEM

	LD	HL,N_TIME
	LD	DE,V_TIME
	LD	B,3
	LD	C,06BH		;_GENV 環境変数の獲得
	CALL	SYSTEM

	LD	HL,N_APPEND
	LD	DE,V_APPEND
	LD	B,PATHX
	LD	C,06BH		;_GENV 環境変数の獲得
	JP	SYSTEM

CSET_LIST:
	LD	A,10
	LD	(CSET_DATA),A
	LD	DE,1
CSET1:
	PUSH	DE
	LD	BC,0FF6DH	;_FENV 環境変数の検索
	LD	HL,DATA_COM
	LD	(HL),0
	CALL	SYSTEM
	OR	A
	JR	NZ,CSET_ERROR
	LD	HL,DATA_COM
	LD	A,(HL)
	OR	A
	JR	Z,CSET_ERROR
	CALL	MSX
	LD	E,'='
	CALL	_PRINT
	LD	HL,DATA_COM
	LD	DE,DATA_COM+256
	LD	BC,0FF6BH	;_GENV 環境変数の獲得
	CALL	SYSTEM
	LD	HL,DATA_COM+256
	CALL	MSX
	CALL	LTNL
	LD	A,10
	LD	(CSET_DATA),A
CSET_NEXT:
	POP	DE
	INC	DE
	LD	A,D
	OR	E
	JR	NZ,CSET1
	RET
CSET_ERROR:
	LD	HL,CSET_DATA
	DEC	(HL)
	JR	NZ,CSET_NEXT
CSET_END:
	POP	DE
	RET

C_FORMAT:
	LD	A,(IS_MSX)
	OR	A
	RET	Z
	LD	A,(MAJOR_VER)
	CP	2
	JR	NC,FORMAT2
FORMAT1:
	LD	IY,(EXPTBL)	;メインROMスロット
	LD	IX,FORMAT
	JP	CALSLT
FORMAT2:
	CALL	SETFCB
	LD	A,(FCB1)
	OR	A
	JR	Z,FORMAT1
	LD	B,A
	XOR	A
	LD	C,067H		;(_FORMAT)ディスクのフォーマット
	CALL	SYSTEM
	OR	A
	JR	NZ,FORMAT1
	CALL	MSXSLT
	LD	HL,PROMPT
	CALL	MSX
FORMAT3:
	LD	C,8		;(BDOS)エコーなしコンソール入力(_INNOE)
	CALL	SYSTEM
	SUB	'0'+1
	JR	C,FORMAT3
	INC	A
	CP	10
	JR	NC,FORMAT3
	PUSH	AF
	CALL	LTNL
	LD	HL,PAUSE
	CALL	MSX
	LD	C,8		;(BDOS)エコーなしコンソール入力(_INNOE)
	CALL	SYSTEM
	CALL	LTNL
	POP	AF
	LD	BC,(FCB1-1)
	LD	HL,08000H
	LD	DE,04000H
	LD	C,067H		;(_FORMAT)ディスクのフォーマット
	JP	SYSTEM

C_RAMDISK:
	LD	A,(IS_MSX)
	OR	A
	RET	Z
	LD	A,(MAJOR_VER)
	CP	2
	RET	C
	CALL	SPCUT
	LD	A,(DE)
	CP	'0'
	RET	C
	CP	'9'+1
	CCF
	RET	C
	CALL	GETNUM
	LD	DE,15		;切り上げの為
	ADD	HL,DE
	LD	A,L
	LD	B,4		;16で割る
RAMDISK1:
	SRL	H	;/2
	RRA
	DJNZ	RAMDISK1
	CP	0FFH
	JR	NZ,RAMDISK2
	DEC	A
RAMDISK2:
	LD	B,A
	LD	C,068H		;(_RAMD)RAMディスクの作成あるいは消去
	CALL	SYSTEM
	OR	A
	CALL	Z,SHOW_OK
	RET

C_ATTRIB:
	LD	A,(IS_MSX)
	OR	A
	RET	Z
	LD	A,(MAJOR_VER)
	CP	2
	RET	C
	LD	(ATTRIB_OPT),DE
				;パス名を検索
ATTRIB1:
	CALL	SPCUT
	LD	A,(DE)
	INC	DE
	CP	' '
	RET	C
	CP	'A'
	JR	NC,ATTRIB2
	INC	DE
	JR	ATTRIB1
ATTRIB2:
	DEC	DE
	LD	(ATTRIB_PATH),DE
	XOR	A
	LD	C,050H		;(BDOS)_ATTR ファイル属性の獲得・設定
	CALL	SYSTEM0
	SCF
	RET	NZ

	LD	DE,0
ATTRIB_OPT	EQU	$-2
ATTRIB3:
	CALL	SPCUT
	LD	A,(DE)
	INC	DE
	CP	'A'
	JR	NC,ATTRIB_WRITE
	CP	'-'
	JR	Z,ATTRIB_M
	CP	'+'
	JR	Z,ATTRIB_P
	CP	'/'
	LD	A,(DE)
	INC	DE
	JR	ATTRIB3
ATTRIB_M:
	LD	A,(DE)
	INC	DE
	CALL	CAP
	CP	'A'
	JR	Z,ATTRIB_M_A
	CP	'S'
	JR	Z,ATTRIB_M_S
	CP	'H'
	JR	Z,ATTRIB_M_H
	CP	'R'
	JR	Z,ATTRIB_M_R
	JR	ATTRIB3
ATTRIB_M_A:
	RES	5,L
	JR	ATTRIB3
ATTRIB_M_S:
	RES	2,L
	JR	ATTRIB3
ATTRIB_M_H:
	RES	1,L
	JR	ATTRIB3
ATTRIB_M_R:
	RES	0,L
	JR	ATTRIB3
ATTRIB_P:
	LD	A,(DE)
	INC	DE
	CALL	CAP
	CP	'A'
	JR	Z,ATTRIB_P_A
	CP	'S'
	JR	Z,ATTRIB_P_S
	CP	'H'
	JR	Z,ATTRIB_P_H
	CP	'R'
	JR	Z,ATTRIB_P_R
	JR	ATTRIB3
ATTRIB_P_A:
	SET	5,L
	JR	ATTRIB3
ATTRIB_P_S:
	SET	2,L
	JR	ATTRIB3
ATTRIB_P_H:
	SET	1,L
	JR	ATTRIB3
ATTRIB_P_R:
	SET	0,L
	JR	ATTRIB3
ATTRIB_WRITE:
	LD	DE,0
ATTRIB_PATH	EQU	$-2
	LD	A,1
	LD	C,050H		;(BDOS)_ATTR ファイル属性の獲得・設定
	CALL	SYSTEM0
	RET	C
	JP	SHOW_OK

GETNUM:
	CALL	SPCUT
	LD	HL,0
GETNUM1:
	LD	A,(DE)
	INC	DE
	SUB	'0'
	RET	C
	CP	10
	RET	NC
	LD	C,L
	LD	B,H
	ADD	HL,HL	;*2
	ADD	HL,HL	;*4
	ADD	HL,BC	;*5
	ADD	HL,HL	;*10
	LD	C,A
	LD	B,0
	ADD	HL,BC
	JR	GETNUM1

COMS	EQU	18
COMTB:
	DB	"D      "	;1
	DW	C_DIR
	DB	"DIR    "	;2
	DW	C_DIR
	DB	"COPY   "	;3
	DW	C_COPY
	DB	"CD     "	;4
	DW	C_CD
	DB	"DEL    "	;5
	DW	C_DEL
	DB	"PATH   "	;6
	DW	C_PATH
	DB	"REN    "	;7
	DW	C_REN
	DB	"TYPE   "	;8
	DW	C_TYPE
	DB	"REM    "	;9
	DW	C_REM
	DB	"MODE   "	;10
	DW	C_MODE
	DB	"PAUSE  "	;11
	DW	C_PAUSE
	DB	"SET    "	;12
	DW	C_SET
	DB	"ECHO   "	;13
	DW	C_ECHO
	DB	"MKDIR  "	;14
	DW	C_MKDIR
	DB	"RMDIR  "	;15
	DW	C_RMDIR
	DB	"FORMAT "	;16
	DW	C_FORMAT
	DB	"RAMDISK"	;17
	DW	C_RAMDISK
	DB	"ATTRIB "	;18
	DW	C_ATTRIB

FREE:	DB	" bytes free  $"
DIRMES:	DB	"   <DIR>$"
OK:	DB	"OK$"
COMERM:	DB	"Error!$"
PAUSE:	DB	"Strike any key when ready ",0

S_MONTH:
	DB	"Jan",0
	DB	"Feb",0
	DB	"Mar",0
	DB	"Apr",0
	DB	"May",0
	DB	"Jun",0
	DB	"Jul",0
	DB	"Aug",0
	DB	"Sep",0
	DB	"Oct",0
	DB	"Nov",0
	DB	"Dec",0

N_APPEND:
	DB	"APPEND",0
V_APPEND:
	DS	64
N_PATH:
	DB	"PATH",0
V_PATH:
	DS	PATHX
N_DATE:
	DB	"DATE",0
V_DATE:
	DB	"yy-mm-dd"
	DS	8
V_DATE1:
	DB	"mm-dd-yy"
V_DATE2:
	DB	"dd-mm-yy"
N_TIME:
	DB	"TIME",0
V_TIME:
	DB	"24",0
N_PROGRAM:
	DB	"PROGRAM",0
N_PARAMETERS:
	DB	"PARAMETERS",0

F_TIME:
	DB	0
PROMPT:
	DB	"? ",0
IS_MSX:
	DB	0
MAJOR_VER:
	DB	0
SEARCH_IX:
	DS	64	;DOS2用
HANDLE1:
	DW	0
PATH_POS:
	DW	0
PATH_DRV:
	DB	"A:\\"
PATH_CCP:
	DS	64	;DOS2用
PATH_PAR:
	DS	64	;DOS2用
PATH_FN1:
	DS	64	;DOS2用
PATH_FN2:
	DS	64	;DOS2用
CUR_DRV:
	DB	"A:\\"
CUR_PATH:
	DS	64	;DOS2用
DOS2NAME:
	DS	2+8+3+1	;DOS2用
DTA_CCP:
	DS	37
DIR_CK:
	DW	0

CPBUF:
LEFTX:	DW	0
DTAX:	DW	0
	DB	020H	;CPBUFで使う
	DB	020H
	DB	020H
	DB	020H
	DB	020H
	DB	020H
	DB	020H

DECBF:
	DS	5
FCB_BAT2:
	DB	0
FDRV:
	DB	0
FNAME:
	DS	37
ZERO:
	DB	0
FCB_BAT:
	DW	FCB_BAT2
X_PATH:
	DW	0
PATH_FN2_SL:
	DW	0
CSET_DATA:
	DB	0
PROCESS:
	DB	0

DATA_COM:
